<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40484040"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4038b188"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4038b188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4047f2b8"/></to>
    </wire>
    <wire loc="55:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404a4ea0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b17758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b17758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4053af10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x404a9380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b1a2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40b1a2c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cdfe00"/></to>
    </wire>
    <wire loc="57:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x404bfb30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4052dbc8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4052dbc8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40563e98"/></to>
    </wire>
    <wire loc="58:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404893f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403874d8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403874d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404d6bd8"/></to>
    </wire>
    <wire loc="59:RadioCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x404b6790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b11a30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b11a30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409178e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404c8e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b1a958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b1a958"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40539920"/></to>
    </wire>
    <wire loc="61:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404ae140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b19010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b19010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d94200"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4097de68"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4094b8b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4072bf18"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408cc538"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c66d8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40887a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4047f650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ea250"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ea250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403634f8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4047fc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a1b030"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4047fc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4097d808"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4047fc18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4038dee8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4038dee8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40393168"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047e030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40395ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40707c70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40395760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4046d880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40393950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4046d4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40393548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404eae48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40393548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40397c10"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40397c10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40396b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40396010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40395ec0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4039a0e0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403a24b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403a24b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403ee988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4039aad0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40396010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403c1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40446880"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403b3d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40409a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40409a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be0de0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403bf2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404137d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404137d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c23c08"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403c44b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6d7f8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403ab8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3ca88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403bb0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40416d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40416d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c443b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403aace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f2dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f2dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b86938"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403ad4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403fd9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403fd9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc39e8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403b1c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40407790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40407790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdbc08"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403bd210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404114f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404114f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1ea88"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403a4590"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f0cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f0cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b447f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403a8c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403faac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403faac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b807f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403b52f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40404790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40404790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbe9e8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403b9a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c00a88"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403c22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c686c0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403c9830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404490b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403b8ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404144f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404144f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c267f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403ee988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3f6c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403b0b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f87d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f87d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7b6c0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403c03d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404420b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403ae010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403fe6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403fe6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b9d538"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403b2750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40408410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40408410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bde7f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403bfce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40412170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40412170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c216c0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403c4ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6b228"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403aa2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f66b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f66b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3a538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403a9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403fb790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403fb790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b833b0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403adea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40405410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40405410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc1538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403ba670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40406170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40406170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c036c0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403bdc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40411e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40411e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1c538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403a3010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403ef6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403ef6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b42228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403a7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403f94f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403f94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7e228"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403b5ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40403170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40403170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbc538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403c2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041c6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c660b0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403b3210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40409128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40409128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be1418"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b78e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40414e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40414e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c24228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403bba98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404156b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404156b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6fd70"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403c82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40452880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403a2ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3d0b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403af590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f7170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b790b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403bc670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404163d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404163d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c46938"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403aea08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403fd090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403fd090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc4010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403b1210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40408d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40408d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdc228"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403be750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40412ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40412ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1f0b0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403c38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6ac08"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4039daf0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f03a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f03a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b49e18"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403a8210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403fa170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403fa170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b82d70"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403ac8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40405d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40405d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbf010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403b90a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40406ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40406ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c010b0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403c0dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4044c880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403b84b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4040bb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4040bb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2bde8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403b4750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40403ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40403ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bba010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403a3a08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403ee030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403ee030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b41c08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403b0120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f9e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f9e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7dc08"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40363d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403629b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40359278"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40376508"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4079d1e0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404eae48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404d6890"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404d3940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404eb010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404eb010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403a3010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404d23c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404eba18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404eba18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403a4590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404d2da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404ea4c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404ea4c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4039daf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40539920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40561b80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40560288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40b19c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40538cf8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40538cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40cdc500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40503220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cdcb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40503220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40531348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40531ab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4053a550"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4053a550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405627c0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40530230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40530e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40539920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x4052f510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x4052f948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40563e98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4085b260"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4053d650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40574af8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40574af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405ea488"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405627c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40831320"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405395c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40561828"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40561828"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40830398"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40561b80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056fa40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40540c68"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4055f598"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4055f598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40877200"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4053af10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40561190"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40561190"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40831ce0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055f010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405d3e60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40560288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405d31a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4054ac68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40566100"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40566100"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405dba10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4085b260"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40890948"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4056cb60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405e1d18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405e1d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405f4d18"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4056fa40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405e6c30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4055d7f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405e2930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405e2930"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405f58f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40877200"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40868918"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405dba10"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405eea10"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405693e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e3568"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e3568"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e4528"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405d3e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405e6718"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405d31a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4062e7e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405ea488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405fd488"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40593040"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x405e79b8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x405e79b8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4062d998"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40592df0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056fa40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405ac078"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4084a010"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4057fbe0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4084b288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4062e7e8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4062e7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4063d7e8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40830798"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40854420"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40854420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40852718"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40830f00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40854b00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40854b00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40852df8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40853660"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4088b7c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4088b7c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408c9b68"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40853dc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4085beb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4085beb0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4088f5f0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408c9070"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405818e8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ca3c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4085b818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4085b818"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40890f20"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40890948"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4088d578"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4088d578"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408873d8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40890f20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4088db60"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4088db60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40887da8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4088f5f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4088a278"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4088a278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40884518"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408896e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056fa40"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4088ad40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408cbd58"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408cbd58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409063c8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408892b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4088bed8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4088bed8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408c62b0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4088a648"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408ec7f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408ec7f0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40906d80"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408cab68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408ec390"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408ec390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40906920"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408ea360"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4058a1d8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408eb010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40928010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40928010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409441f8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408eb5f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40928568"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40928568"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40944750"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x408ebac8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4097f128"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4097f128"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4097a1f8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409275c8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40588a18"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40928a78"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4092adf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4092adf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4095c2c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40927098"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4095e390"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4095e390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4095c818"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4095d3a0"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40584228"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4095e8a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40967010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40967010"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40966748"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4095ee80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4097fd78"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4097fd78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4097ae48"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40984588"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40587638"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40966748"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4097f820"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4097f820"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4097a8f0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40985090"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x4097e288"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4097e288"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409792c8"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x4097e720"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x4057a920"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x405de120"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x405f1120"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x405dc540"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x405ef540"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x405fcc40"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x405e79b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405f78c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40630540"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40630540"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40733940"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x405f9318"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4072b040"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4072b040"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4073da58"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40639dc8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40640740"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.0/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40732360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4068c908"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.0/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40719b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406883e0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406883e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406f2890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40708a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40694928"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40694928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406a6230"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4069f360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ba530"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40691190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406b8258"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aacb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x406b6128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aacb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406b5d20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aacb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406b2950"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40706078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40694928"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4073da58"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40820538"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407406e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e3a60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4072bf18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40738240"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40738240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d2870"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4080be30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40739c60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407e8010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4074b978"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4074b978"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407d2ca8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40820ed0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x4074a5b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x4074a5b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407cf718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x407cf718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d26f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x407d2870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d27080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x407d2ca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d274b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d23120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077f890"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4077f890"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4078c780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40d202e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40793b68"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40793b68"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40789af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40d20cd0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407916b8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407916b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407a06b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40d1e730"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4078f280"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4078f280"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4079d640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x407e79a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40821050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4082f878"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408176e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409f1ca0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4082c170"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408176e8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408263f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4082e808"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4083ade8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40853010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4084f970"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40853660"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4084d130"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40853dc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4084d4d0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x405e79b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40876cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408904b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40877cf8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408914d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40891170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4088f928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408768c8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40890098"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408763f0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40891b90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408848e8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4088a648"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4089f010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4082e808"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4089f628"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4088ad40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4089fb80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408892b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4089e010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408896e8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40899f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40893570"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x408ba938"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408be450"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408c8960"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408c8960"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408cc8d0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408da498"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408cd520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408cd520"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e7328"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408c6ad8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408ca3c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408c5338"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408cab68"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x408c57b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408c9070"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40902128"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408eb010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40902708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408eb5f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40902be0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408ebac8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x409035f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408ea360"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40901470"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4091c6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4091c6e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409178e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408ff750"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408c8960"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408ffe90"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4092f620"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4092f620"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e7328"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408fe4a8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4082e808"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x40920820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409178e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407406e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40944c60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40928a78"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40942010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409275c8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40943258"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40927098"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409436b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40940a50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40949c40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40949c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409476e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4093e010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40949380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4094bdd0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4094c010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4094b8b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4095cd28"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4095e8a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40959338"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4095ee80"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40959ee0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4095d3a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40959798"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40929da8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40985528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409678e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40985090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40968930"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40966090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4095f3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40985b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4095fda0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40868918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40967cf8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40984588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409674e8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40966c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4095fa88"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40984250"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409a0328"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x4097e720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4098d300"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e3568"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4098b6d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405e2930"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40988a58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405e1d18"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40986e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x405dc540"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409a32b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405dba10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409a2a48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40630540"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4099f298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409f1ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ac5c88"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409797c0"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x4097ba60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x4097ba60"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403aace8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40993310"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x409f34d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409f34d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a27190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409923a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409f3bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409f3bb8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a285e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x4098fb20"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x409ee650"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x409ee650"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a1b3a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409772f0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x409f2010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409f2010"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403af590"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40977cd8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x409f29f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409f29f8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403ab8e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x4098ce70"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x409f14a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409f14a0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a1c990"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409a0bc8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4082e808"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4098a748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40aebe40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a285e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a20628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ac5c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d7d088"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a18a88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403b90a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a174b8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403b1c08"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a1bc80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40691190"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a24a28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a209a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a28268"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a202c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a27190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a1f100"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a1d010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a908c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a908c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d93578"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a33640"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d92150"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a36320"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a550c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a550c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a754a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a33ac0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40359f28"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a4a860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a70c00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40359f28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a73338"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403aace8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a73d10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403a9750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a72740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403a8210"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a70200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403a8c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40aca030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40d93cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d92610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40aca8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40d92a38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40d94538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40d91050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40dabb00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40694928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40da9dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406aacb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b17a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40539920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b16150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.1.0/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.1.0/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.0/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.4 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioCountToLedsC" loc="46:RadioCountToLedsC.nc" safe="">
      <documentation loc="35:RadioCountToLedsC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.0/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC" loc="39(RadioCountToLedsAppC.AMSenderC):/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.AMQueueEntryP" loc="35(RadioCountToLedsAppC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.1.0/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.0/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40746330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.1.0/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMReceiverC" loc="35(RadioCountToLedsAppC.AMReceiverC):/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.TimerMilliC" loc="36(RadioCountToLedsAppC.TimerMilliC):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403ce0e8" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ce300" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403ce518" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403d14e8" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403d1710" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403d1938" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403d1b28" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40423a30" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40423c58" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40423e80" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40420088" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x404e62b0" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x404f9240" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x405026c8" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x407052e0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407052e0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40705500" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x406f3ea0" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x406f3ea0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40711348" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40711348"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40718010" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40718010"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40718470" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40718470"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407186d8" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407186d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40718b48" loc="47:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40718b48"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40718db0" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40717258" loc="49:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40717258"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40734858" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40734858"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40746330" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40746330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407464f0" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407415c8" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407415c8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40741788" loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4073a6e0" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4073a6e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407e5d00" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407e5d00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x407e5ee0" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a92e48" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a8cd88" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40ac0b40" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40ac0b40"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40ae3010" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ae3010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40ae31d0" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b15010" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4038bdb0" loc="47:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4038bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4038b188" loc="46:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4038b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4038b360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40395ec0" loc="43:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40395ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403900c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4038dee8" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4038dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403910e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40395760" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40395760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40395938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40395a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40395af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40395bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40395cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40393548" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40393548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40393720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40393168" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40393168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40393340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40393950" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40393950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40393b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40396010" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40396010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403961e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40397c10" loc="17:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40397c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40397de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4039aad0" loc="22:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4039aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4039aca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4039a0e0" loc="21:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4039a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039a2b8"/>
        <function-ref name="isInput" scoped="" ref="0x4039a398"/>
        <function-ref name="toggle" scoped="" ref="0x4039a478"/>
        <function-ref name="isOutput" scoped="" ref="0x4039a558"/>
        <function-ref name="get" scoped="" ref="0x4039a638"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039a718"/>
        <function-ref name="set" scoped="" ref="0x4039a7f8"/>
        <function-ref name="clr" scoped="" ref="0x4039a8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40396b98" loc="20:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40396b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40396d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403c1750" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403c1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403c1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403c1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1dc8"/>
        <function-ref name="get" scoped="" ref="0x403c1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0010"/>
        <function-ref name="set" scoped="" ref="0x403c00f0"/>
        <function-ref name="clr" scoped="" ref="0x403c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403b3d08" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403b3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b3ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403b2010"/>
        <function-ref name="toggle" scoped="" ref="0x403b20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b21d0"/>
        <function-ref name="get" scoped="" ref="0x403b22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2390"/>
        <function-ref name="set" scoped="" ref="0x403b2470"/>
        <function-ref name="clr" scoped="" ref="0x403b2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403bf2f0" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403bf5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403bf688"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf768"/>
        <function-ref name="get" scoped="" ref="0x403bf848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf928"/>
        <function-ref name="set" scoped="" ref="0x403bfa08"/>
        <function-ref name="clr" scoped="" ref="0x403bfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403c44b0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403c44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4688"/>
        <function-ref name="isInput" scoped="" ref="0x403c4768"/>
        <function-ref name="toggle" scoped="" ref="0x403c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4928"/>
        <function-ref name="get" scoped="" ref="0x403c4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4ae8"/>
        <function-ref name="set" scoped="" ref="0x403c4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403ab8e0" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403ab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403abab8"/>
        <function-ref name="isInput" scoped="" ref="0x403abb98"/>
        <function-ref name="toggle" scoped="" ref="0x403abc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403abd58"/>
        <function-ref name="get" scoped="" ref="0x403abe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403abf18"/>
        <function-ref name="set" scoped="" ref="0x403aa010"/>
        <function-ref name="clr" scoped="" ref="0x403aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403bb0a0" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb278"/>
        <function-ref name="isInput" scoped="" ref="0x403bb358"/>
        <function-ref name="toggle" scoped="" ref="0x403bb438"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb518"/>
        <function-ref name="get" scoped="" ref="0x403bb5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb6d8"/>
        <function-ref name="set" scoped="" ref="0x403bb7b8"/>
        <function-ref name="clr" scoped="" ref="0x403bb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403aace8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403aace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aaec0"/>
        <function-ref name="isInput" scoped="" ref="0x403a9010"/>
        <function-ref name="toggle" scoped="" ref="0x403a90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a91d0"/>
        <function-ref name="get" scoped="" ref="0x403a92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9390"/>
        <function-ref name="set" scoped="" ref="0x403a9470"/>
        <function-ref name="clr" scoped="" ref="0x403a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403ad4b0" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403ad4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad688"/>
        <function-ref name="isInput" scoped="" ref="0x403ad768"/>
        <function-ref name="toggle" scoped="" ref="0x403ad848"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad928"/>
        <function-ref name="get" scoped="" ref="0x403ada08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403adae8"/>
        <function-ref name="set" scoped="" ref="0x403adbc8"/>
        <function-ref name="clr" scoped="" ref="0x403adca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403b1c08" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403b1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1de0"/>
        <function-ref name="isInput" scoped="" ref="0x403b1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ba010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba0f0"/>
        <function-ref name="get" scoped="" ref="0x403ba1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba2b0"/>
        <function-ref name="set" scoped="" ref="0x403ba390"/>
        <function-ref name="clr" scoped="" ref="0x403ba470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403bd210" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403bd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403bd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403bd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd688"/>
        <function-ref name="get" scoped="" ref="0x403bd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd848"/>
        <function-ref name="set" scoped="" ref="0x403bd928"/>
        <function-ref name="clr" scoped="" ref="0x403bda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403a4590" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403a4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4768"/>
        <function-ref name="isInput" scoped="" ref="0x403a4848"/>
        <function-ref name="toggle" scoped="" ref="0x403a4928"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4a08"/>
        <function-ref name="get" scoped="" ref="0x403a4ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a4bc8"/>
        <function-ref name="set" scoped="" ref="0x403a4ca8"/>
        <function-ref name="clr" scoped="" ref="0x403a4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403a8c08" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403a8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8de0"/>
        <function-ref name="isInput" scoped="" ref="0x403a8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403a7010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a70f0"/>
        <function-ref name="get" scoped="" ref="0x403a71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a72b0"/>
        <function-ref name="set" scoped="" ref="0x403a7390"/>
        <function-ref name="clr" scoped="" ref="0x403a7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403b52f0" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b54c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b55a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b5688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5768"/>
        <function-ref name="get" scoped="" ref="0x403b5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b5928"/>
        <function-ref name="set" scoped="" ref="0x403b5a08"/>
        <function-ref name="clr" scoped="" ref="0x403b5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403b9a98" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403b9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9c70"/>
        <function-ref name="isInput" scoped="" ref="0x403b9d50"/>
        <function-ref name="toggle" scoped="" ref="0x403b9e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9f10"/>
        <function-ref name="get" scoped="" ref="0x403b8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b80f0"/>
        <function-ref name="set" scoped="" ref="0x403b81d0"/>
        <function-ref name="clr" scoped="" ref="0x403b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403c22f0" loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2768"/>
        <function-ref name="get" scoped="" ref="0x403c2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2928"/>
        <function-ref name="set" scoped="" ref="0x403c2a08"/>
        <function-ref name="clr" scoped="" ref="0x403c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403c9830" loc="94:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403c9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403c9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403c9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9ca8"/>
        <function-ref name="get" scoped="" ref="0x403c9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9e68"/>
        <function-ref name="set" scoped="" ref="0x403c8010"/>
        <function-ref name="clr" scoped="" ref="0x403c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403b8ea8" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403b8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b70c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b71a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b7280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b7360"/>
        <function-ref name="get" scoped="" ref="0x403b7440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b7520"/>
        <function-ref name="set" scoped="" ref="0x403b7600"/>
        <function-ref name="clr" scoped="" ref="0x403b76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403a24b0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403a24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2688"/>
        <function-ref name="isInput" scoped="" ref="0x403a2768"/>
        <function-ref name="toggle" scoped="" ref="0x403a2848"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2928"/>
        <function-ref name="get" scoped="" ref="0x403a2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2ae8"/>
        <function-ref name="set" scoped="" ref="0x403a2bc8"/>
        <function-ref name="clr" scoped="" ref="0x403a2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403b0b18" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403b0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403b0dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403b0eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403af010"/>
        <function-ref name="get" scoped="" ref="0x403af0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af1d0"/>
        <function-ref name="set" scoped="" ref="0x403af2b0"/>
        <function-ref name="clr" scoped="" ref="0x403af390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403c03d0" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403c03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c05a8"/>
        <function-ref name="isInput" scoped="" ref="0x403c0688"/>
        <function-ref name="toggle" scoped="" ref="0x403c0768"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0848"/>
        <function-ref name="get" scoped="" ref="0x403c0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0a08"/>
        <function-ref name="set" scoped="" ref="0x403c0ae8"/>
        <function-ref name="clr" scoped="" ref="0x403c0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403ae010" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ae2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ae3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae488"/>
        <function-ref name="get" scoped="" ref="0x403ae568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae648"/>
        <function-ref name="set" scoped="" ref="0x403ae728"/>
        <function-ref name="clr" scoped="" ref="0x403ae808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403b2750" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403b2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b2928"/>
        <function-ref name="isInput" scoped="" ref="0x403b2a08"/>
        <function-ref name="toggle" scoped="" ref="0x403b2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2bc8"/>
        <function-ref name="get" scoped="" ref="0x403b2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2d88"/>
        <function-ref name="set" scoped="" ref="0x403b2e68"/>
        <function-ref name="clr" scoped="" ref="0x403b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403bfce8" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403bfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bfec0"/>
        <function-ref name="isInput" scoped="" ref="0x403be010"/>
        <function-ref name="toggle" scoped="" ref="0x403be0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403be1d0"/>
        <function-ref name="get" scoped="" ref="0x403be2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be390"/>
        <function-ref name="set" scoped="" ref="0x403be470"/>
        <function-ref name="clr" scoped="" ref="0x403be550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403c4ea8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403c4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3360"/>
        <function-ref name="get" scoped="" ref="0x403c3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3520"/>
        <function-ref name="set" scoped="" ref="0x403c3600"/>
        <function-ref name="clr" scoped="" ref="0x403c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403aa2f0" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403aa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403aa5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403aa688"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa768"/>
        <function-ref name="get" scoped="" ref="0x403aa848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa928"/>
        <function-ref name="set" scoped="" ref="0x403aaa08"/>
        <function-ref name="clr" scoped="" ref="0x403aaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403a9750" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403a9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9928"/>
        <function-ref name="isInput" scoped="" ref="0x403a9a08"/>
        <function-ref name="toggle" scoped="" ref="0x403a9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a9bc8"/>
        <function-ref name="get" scoped="" ref="0x403a9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9d88"/>
        <function-ref name="set" scoped="" ref="0x403a9e68"/>
        <function-ref name="clr" scoped="" ref="0x403a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403adea8" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403adea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ac1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ac280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac360"/>
        <function-ref name="get" scoped="" ref="0x403ac440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac520"/>
        <function-ref name="set" scoped="" ref="0x403ac600"/>
        <function-ref name="clr" scoped="" ref="0x403ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403ba670" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba848"/>
        <function-ref name="isInput" scoped="" ref="0x403ba928"/>
        <function-ref name="toggle" scoped="" ref="0x403baa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403baae8"/>
        <function-ref name="get" scoped="" ref="0x403babc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403baca8"/>
        <function-ref name="set" scoped="" ref="0x403bad88"/>
        <function-ref name="clr" scoped="" ref="0x403bae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403bdc08" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403bdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bdde0"/>
        <function-ref name="isInput" scoped="" ref="0x403bdec0"/>
        <function-ref name="toggle" scoped="" ref="0x403bc010"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc0f0"/>
        <function-ref name="get" scoped="" ref="0x403bc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc2b0"/>
        <function-ref name="set" scoped="" ref="0x403bc390"/>
        <function-ref name="clr" scoped="" ref="0x403bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403a3010" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a31e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a32c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3488"/>
        <function-ref name="get" scoped="" ref="0x403a3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3648"/>
        <function-ref name="set" scoped="" ref="0x403a3728"/>
        <function-ref name="clr" scoped="" ref="0x403a3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403a7670" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a78c8"/>
        <function-ref name="isInput" scoped="" ref="0x403a79a8"/>
        <function-ref name="toggle" scoped="" ref="0x403a7a88"/>
        <function-ref name="isOutput" scoped="" ref="0x403a7b68"/>
        <function-ref name="get" scoped="" ref="0x403a7c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7d28"/>
        <function-ref name="set" scoped="" ref="0x403a7e08"/>
        <function-ref name="clr" scoped="" ref="0x403a7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403b5ce8" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403b5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b4010"/>
        <function-ref name="toggle" scoped="" ref="0x403b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b41d0"/>
        <function-ref name="get" scoped="" ref="0x403b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4390"/>
        <function-ref name="set" scoped="" ref="0x403b4470"/>
        <function-ref name="clr" scoped="" ref="0x403b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403c2ce8" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403c2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c1010"/>
        <function-ref name="toggle" scoped="" ref="0x403c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c11d0"/>
        <function-ref name="get" scoped="" ref="0x403c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1390"/>
        <function-ref name="set" scoped="" ref="0x403c1470"/>
        <function-ref name="clr" scoped="" ref="0x403c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403b3210" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b34e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b35c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b36a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3788"/>
        <function-ref name="get" scoped="" ref="0x403b3868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3948"/>
        <function-ref name="set" scoped="" ref="0x403b3a28"/>
        <function-ref name="clr" scoped="" ref="0x403b3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b78e0" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b7ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b7b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b7c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b7d58"/>
        <function-ref name="get" scoped="" ref="0x403b7e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b7f18"/>
        <function-ref name="set" scoped="" ref="0x403bf010"/>
        <function-ref name="clr" scoped="" ref="0x403bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403bba98" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403bba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bbc70"/>
        <function-ref name="isInput" scoped="" ref="0x403bbd50"/>
        <function-ref name="toggle" scoped="" ref="0x403bbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403bbf10"/>
        <function-ref name="get" scoped="" ref="0x403c4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c40f0"/>
        <function-ref name="set" scoped="" ref="0x403c41d0"/>
        <function-ref name="clr" scoped="" ref="0x403c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403c82f0" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8768"/>
        <function-ref name="get" scoped="" ref="0x403c8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8928"/>
        <function-ref name="set" scoped="" ref="0x403c8a08"/>
        <function-ref name="clr" scoped="" ref="0x403c8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403a2ea8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403a2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ab1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ab280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab360"/>
        <function-ref name="get" scoped="" ref="0x403ab440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab520"/>
        <function-ref name="set" scoped="" ref="0x403ab600"/>
        <function-ref name="clr" scoped="" ref="0x403ab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403af590" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403af590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af768"/>
        <function-ref name="isInput" scoped="" ref="0x403af848"/>
        <function-ref name="toggle" scoped="" ref="0x403af928"/>
        <function-ref name="isOutput" scoped="" ref="0x403afa08"/>
        <function-ref name="get" scoped="" ref="0x403afae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403afbc8"/>
        <function-ref name="set" scoped="" ref="0x403afca8"/>
        <function-ref name="clr" scoped="" ref="0x403afd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403bc670" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc848"/>
        <function-ref name="isInput" scoped="" ref="0x403bc928"/>
        <function-ref name="toggle" scoped="" ref="0x403bca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403bcae8"/>
        <function-ref name="get" scoped="" ref="0x403bcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bcca8"/>
        <function-ref name="set" scoped="" ref="0x403bcd88"/>
        <function-ref name="clr" scoped="" ref="0x403bce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403aea08" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403aea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aebe0"/>
        <function-ref name="isInput" scoped="" ref="0x403aecc0"/>
        <function-ref name="toggle" scoped="" ref="0x403aeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403aee80"/>
        <function-ref name="get" scoped="" ref="0x403ad010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad0f0"/>
        <function-ref name="set" scoped="" ref="0x403ad1d0"/>
        <function-ref name="clr" scoped="" ref="0x403ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403b1210" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403b1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b13e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b14c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1688"/>
        <function-ref name="get" scoped="" ref="0x403b1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1848"/>
        <function-ref name="set" scoped="" ref="0x403b1928"/>
        <function-ref name="clr" scoped="" ref="0x403b1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403be750" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403be750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be928"/>
        <function-ref name="isInput" scoped="" ref="0x403bea08"/>
        <function-ref name="toggle" scoped="" ref="0x403beae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bebc8"/>
        <function-ref name="get" scoped="" ref="0x403beca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bed88"/>
        <function-ref name="set" scoped="" ref="0x403bee68"/>
        <function-ref name="clr" scoped="" ref="0x403bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403c38e0" loc="87:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403c38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3d58"/>
        <function-ref name="get" scoped="" ref="0x403c3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3f18"/>
        <function-ref name="set" scoped="" ref="0x403c2010"/>
        <function-ref name="clr" scoped="" ref="0x403c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4039daf0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4039daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039dcc8"/>
        <function-ref name="isInput" scoped="" ref="0x4039dda8"/>
        <function-ref name="toggle" scoped="" ref="0x4039de88"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4010"/>
        <function-ref name="get" scoped="" ref="0x403a40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a41d0"/>
        <function-ref name="set" scoped="" ref="0x403a42b0"/>
        <function-ref name="clr" scoped="" ref="0x403a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403a8210" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403a8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a83e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a84c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8688"/>
        <function-ref name="get" scoped="" ref="0x403a8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a8848"/>
        <function-ref name="set" scoped="" ref="0x403a8928"/>
        <function-ref name="clr" scoped="" ref="0x403a8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403ac8e0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403ac8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403acab8"/>
        <function-ref name="isInput" scoped="" ref="0x403acb98"/>
        <function-ref name="toggle" scoped="" ref="0x403acc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403acd58"/>
        <function-ref name="get" scoped="" ref="0x403ace38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403acf18"/>
        <function-ref name="set" scoped="" ref="0x403b5010"/>
        <function-ref name="clr" scoped="" ref="0x403b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403b90a0" loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9278"/>
        <function-ref name="isInput" scoped="" ref="0x403b9358"/>
        <function-ref name="toggle" scoped="" ref="0x403b9438"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9518"/>
        <function-ref name="get" scoped="" ref="0x403b95f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b96d8"/>
        <function-ref name="set" scoped="" ref="0x403b97b8"/>
        <function-ref name="clr" scoped="" ref="0x403b9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403c0dc8" loc="93:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403c0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9010"/>
        <function-ref name="isInput" scoped="" ref="0x403c90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403c91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c92b0"/>
        <function-ref name="get" scoped="" ref="0x403c9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9470"/>
        <function-ref name="set" scoped="" ref="0x403c9550"/>
        <function-ref name="clr" scoped="" ref="0x403c9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403b84b0" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403b84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8688"/>
        <function-ref name="isInput" scoped="" ref="0x403b8768"/>
        <function-ref name="toggle" scoped="" ref="0x403b8848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8928"/>
        <function-ref name="get" scoped="" ref="0x403b8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8ae8"/>
        <function-ref name="set" scoped="" ref="0x403b8bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403b4750" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4928"/>
        <function-ref name="isInput" scoped="" ref="0x403b4a08"/>
        <function-ref name="toggle" scoped="" ref="0x403b4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4bc8"/>
        <function-ref name="get" scoped="" ref="0x403b4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4d88"/>
        <function-ref name="set" scoped="" ref="0x403b4e68"/>
        <function-ref name="clr" scoped="" ref="0x403b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403a3a08" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403a3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3be0"/>
        <function-ref name="isInput" scoped="" ref="0x403a3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403a3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3e80"/>
        <function-ref name="get" scoped="" ref="0x403a2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a20f0"/>
        <function-ref name="set" scoped="" ref="0x403a21d0"/>
        <function-ref name="clr" scoped="" ref="0x403a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403b0120" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403b0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b02f8"/>
        <function-ref name="isInput" scoped="" ref="0x403b03d8"/>
        <function-ref name="toggle" scoped="" ref="0x403b04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0598"/>
        <function-ref name="get" scoped="" ref="0x403b0678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0758"/>
        <function-ref name="set" scoped="" ref="0x403b0838"/>
        <function-ref name="clr" scoped="" ref="0x403b0918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403ef6b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403ef6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef888"/>
        <function-ref name="isInput" scoped="" ref="0x403ef968"/>
        <function-ref name="toggle" scoped="" ref="0x403efa48"/>
        <function-ref name="isOutput" scoped="" ref="0x403efb28"/>
        <function-ref name="get" scoped="" ref="0x403efc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403efce8"/>
        <function-ref name="set" scoped="" ref="0x403efdc8"/>
        <function-ref name="clr" scoped="" ref="0x403efea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ed330" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed508"/>
        <function-ref name="isInput" scoped="" ref="0x403ed5e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ed6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed7a8"/>
        <function-ref name="get" scoped="" ref="0x403ed888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed968"/>
        <function-ref name="set" scoped="" ref="0x403eda48"/>
        <function-ref name="clr" scoped="" ref="0x403edb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f03a0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0578"/>
        <function-ref name="isInput" scoped="" ref="0x403f0658"/>
        <function-ref name="toggle" scoped="" ref="0x403f0738"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0818"/>
        <function-ref name="get" scoped="" ref="0x403f08f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f09d8"/>
        <function-ref name="set" scoped="" ref="0x403f0ab8"/>
        <function-ref name="clr" scoped="" ref="0x403f0b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403ee030" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403ee030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee208"/>
        <function-ref name="isInput" scoped="" ref="0x403ee2e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ee3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee4a8"/>
        <function-ref name="get" scoped="" ref="0x403ee588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee668"/>
        <function-ref name="set" scoped="" ref="0x403ee748"/>
        <function-ref name="clr" scoped="" ref="0x403ee828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403edc88" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ede60"/>
        <function-ref name="isInput" scoped="" ref="0x403f6010"/>
        <function-ref name="toggle" scoped="" ref="0x403f60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f61d0"/>
        <function-ref name="get" scoped="" ref="0x403f62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6390"/>
        <function-ref name="set" scoped="" ref="0x403f6470"/>
        <function-ref name="clr" scoped="" ref="0x403f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f0cf8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0ed0"/>
        <function-ref name="isInput" scoped="" ref="0x403ef010"/>
        <function-ref name="toggle" scoped="" ref="0x403ef0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef1d0"/>
        <function-ref name="get" scoped="" ref="0x403ef2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef390"/>
        <function-ref name="set" scoped="" ref="0x403ef470"/>
        <function-ref name="clr" scoped="" ref="0x403ef550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403ee988" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403ee988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eeb60"/>
        <function-ref name="isInput" scoped="" ref="0x403eec40"/>
        <function-ref name="toggle" scoped="" ref="0x403eed20"/>
        <function-ref name="isOutput" scoped="" ref="0x403eee00"/>
        <function-ref name="get" scoped="" ref="0x403eeee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed010"/>
        <function-ref name="set" scoped="" ref="0x403ed0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f66b0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f6888"/>
        <function-ref name="isInput" scoped="" ref="0x403f6968"/>
        <function-ref name="toggle" scoped="" ref="0x403f6a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6b28"/>
        <function-ref name="get" scoped="" ref="0x403f6c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6ce8"/>
        <function-ref name="set" scoped="" ref="0x403f6dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b49e18" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b49e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b45010"/>
        <function-ref name="isInput" scoped="" ref="0x40b450f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b452b0"/>
        <function-ref name="get" scoped="" ref="0x40b45390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b45470"/>
        <function-ref name="set" scoped="" ref="0x40b45550"/>
        <function-ref name="clr" scoped="" ref="0x40b45630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b447f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b447f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b449d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b44ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b44b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b44c70"/>
        <function-ref name="get" scoped="" ref="0x40b44d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b44e30"/>
        <function-ref name="set" scoped="" ref="0x40b44f10"/>
        <function-ref name="clr" scoped="" ref="0x40b43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b42228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b42228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b42400"/>
        <function-ref name="isInput" scoped="" ref="0x40b424e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b425c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b426a0"/>
        <function-ref name="get" scoped="" ref="0x40b42780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b42860"/>
        <function-ref name="set" scoped="" ref="0x40b42940"/>
        <function-ref name="clr" scoped="" ref="0x40b42a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b41c08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b41c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b41de0"/>
        <function-ref name="isInput" scoped="" ref="0x40b41ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b40010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b400f0"/>
        <function-ref name="get" scoped="" ref="0x40b401d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b402b0"/>
        <function-ref name="set" scoped="" ref="0x40b40390"/>
        <function-ref name="clr" scoped="" ref="0x40b40470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3f6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3f898"/>
        <function-ref name="isInput" scoped="" ref="0x40b3f978"/>
        <function-ref name="toggle" scoped="" ref="0x40b3fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3fb38"/>
        <function-ref name="get" scoped="" ref="0x40b3fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3fcf8"/>
        <function-ref name="set" scoped="" ref="0x40b3fdd8"/>
        <function-ref name="clr" scoped="" ref="0x40b3feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3d0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3d288"/>
        <function-ref name="isInput" scoped="" ref="0x40b3d368"/>
        <function-ref name="toggle" scoped="" ref="0x40b3d448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3d528"/>
        <function-ref name="get" scoped="" ref="0x40b3d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3d6e8"/>
        <function-ref name="set" scoped="" ref="0x40b3d7c8"/>
        <function-ref name="clr" scoped="" ref="0x40b3d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3ca88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3cc60"/>
        <function-ref name="isInput" scoped="" ref="0x40b3cd40"/>
        <function-ref name="toggle" scoped="" ref="0x40b3ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3cf00"/>
        <function-ref name="get" scoped="" ref="0x40b3b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="set" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="clr" scoped="" ref="0x40b3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3a538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3a710"/>
        <function-ref name="isInput" scoped="" ref="0x40b3a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b3a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3a9b0"/>
        <function-ref name="get" scoped="" ref="0x40b3aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3ab70"/>
        <function-ref name="set" scoped="" ref="0x40b3ac50"/>
        <function-ref name="clr" scoped="" ref="0x40b3ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403fa170" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403fa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa348"/>
        <function-ref name="isInput" scoped="" ref="0x403fa428"/>
        <function-ref name="toggle" scoped="" ref="0x403fa508"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa5e8"/>
        <function-ref name="get" scoped="" ref="0x403fa6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa7a8"/>
        <function-ref name="set" scoped="" ref="0x403fa888"/>
        <function-ref name="clr" scoped="" ref="0x403fa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f9e48" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8050"/>
        <function-ref name="isInput" scoped="" ref="0x403f8130"/>
        <function-ref name="toggle" scoped="" ref="0x403f8210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f82f0"/>
        <function-ref name="get" scoped="" ref="0x403f83d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f84b0"/>
        <function-ref name="set" scoped="" ref="0x403f8590"/>
        <function-ref name="clr" scoped="" ref="0x403f8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f2dc8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb010"/>
        <function-ref name="isInput" scoped="" ref="0x403fb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403fb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb2b0"/>
        <function-ref name="get" scoped="" ref="0x403fb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fb470"/>
        <function-ref name="set" scoped="" ref="0x403fb550"/>
        <function-ref name="clr" scoped="" ref="0x403fb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403faac8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403faac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403faca0"/>
        <function-ref name="isInput" scoped="" ref="0x403fad80"/>
        <function-ref name="toggle" scoped="" ref="0x403fae60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9010"/>
        <function-ref name="get" scoped="" ref="0x403f90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f91d0"/>
        <function-ref name="set" scoped="" ref="0x403f92b0"/>
        <function-ref name="clr" scoped="" ref="0x403f9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f87d0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f89a8"/>
        <function-ref name="isInput" scoped="" ref="0x403f8a88"/>
        <function-ref name="toggle" scoped="" ref="0x403f8b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8c48"/>
        <function-ref name="get" scoped="" ref="0x403f8d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8e08"/>
        <function-ref name="set" scoped="" ref="0x403f8ee8"/>
        <function-ref name="clr" scoped="" ref="0x403f7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403fb790" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403fb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb968"/>
        <function-ref name="isInput" scoped="" ref="0x403fba48"/>
        <function-ref name="toggle" scoped="" ref="0x403fbb28"/>
        <function-ref name="isOutput" scoped="" ref="0x403fbc08"/>
        <function-ref name="get" scoped="" ref="0x403fbce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fbdc8"/>
        <function-ref name="set" scoped="" ref="0x403fbea8"/>
        <function-ref name="clr" scoped="" ref="0x403fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403f94f0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403f94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f96c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f97a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f9888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9968"/>
        <function-ref name="get" scoped="" ref="0x403f9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f9b28"/>
        <function-ref name="set" scoped="" ref="0x403f9c08"/>
        <function-ref name="clr" scoped="" ref="0x403f9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f7170" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7348"/>
        <function-ref name="isInput" scoped="" ref="0x403f7428"/>
        <function-ref name="toggle" scoped="" ref="0x403f7508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f75e8"/>
        <function-ref name="get" scoped="" ref="0x403f76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f77a8"/>
        <function-ref name="set" scoped="" ref="0x403f7888"/>
        <function-ref name="clr" scoped="" ref="0x403f7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b86938" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b86938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b86b10"/>
        <function-ref name="isInput" scoped="" ref="0x40b86bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40b86cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b86db0"/>
        <function-ref name="get" scoped="" ref="0x40b86e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b84010"/>
        <function-ref name="set" scoped="" ref="0x40b840f0"/>
        <function-ref name="clr" scoped="" ref="0x40b841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b833b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b833b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b83588"/>
        <function-ref name="isInput" scoped="" ref="0x40b83668"/>
        <function-ref name="toggle" scoped="" ref="0x40b83748"/>
        <function-ref name="isOutput" scoped="" ref="0x40b83828"/>
        <function-ref name="get" scoped="" ref="0x40b83908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b839e8"/>
        <function-ref name="set" scoped="" ref="0x40b83ac8"/>
        <function-ref name="clr" scoped="" ref="0x40b83ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b82d70" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b82d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b81010"/>
        <function-ref name="isInput" scoped="" ref="0x40b810f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b812b0"/>
        <function-ref name="get" scoped="" ref="0x40b81390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b81470"/>
        <function-ref name="set" scoped="" ref="0x40b81550"/>
        <function-ref name="clr" scoped="" ref="0x40b81630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b807f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b807f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b809d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b80ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b80b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b80c70"/>
        <function-ref name="get" scoped="" ref="0x40b80d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b80e30"/>
        <function-ref name="set" scoped="" ref="0x40b80f10"/>
        <function-ref name="clr" scoped="" ref="0x40b7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7e228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7e400"/>
        <function-ref name="isInput" scoped="" ref="0x40b7e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7e6a0"/>
        <function-ref name="get" scoped="" ref="0x40b7e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7e860"/>
        <function-ref name="set" scoped="" ref="0x40b7e940"/>
        <function-ref name="clr" scoped="" ref="0x40b7ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7dc08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7dde0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7dec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7c010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7c0f0"/>
        <function-ref name="get" scoped="" ref="0x40b7c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7c2b0"/>
        <function-ref name="set" scoped="" ref="0x40b7c390"/>
        <function-ref name="clr" scoped="" ref="0x40b7c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7b6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7b898"/>
        <function-ref name="isInput" scoped="" ref="0x40b7b978"/>
        <function-ref name="toggle" scoped="" ref="0x40b7ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7bb38"/>
        <function-ref name="get" scoped="" ref="0x40b7bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7bcf8"/>
        <function-ref name="set" scoped="" ref="0x40b7bdd8"/>
        <function-ref name="clr" scoped="" ref="0x40b7beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b790b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b790b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b79288"/>
        <function-ref name="isInput" scoped="" ref="0x40b79368"/>
        <function-ref name="toggle" scoped="" ref="0x40b79448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b79528"/>
        <function-ref name="get" scoped="" ref="0x40b79608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b796e8"/>
        <function-ref name="set" scoped="" ref="0x40b797c8"/>
        <function-ref name="clr" scoped="" ref="0x40b798a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403fd9e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403fd9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fdbc0"/>
        <function-ref name="isInput" scoped="" ref="0x403fdca0"/>
        <function-ref name="toggle" scoped="" ref="0x403fdd80"/>
        <function-ref name="isOutput" scoped="" ref="0x403fde60"/>
        <function-ref name="get" scoped="" ref="0x40405010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404050f0"/>
        <function-ref name="set" scoped="" ref="0x404051d0"/>
        <function-ref name="clr" scoped="" ref="0x404052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40404790" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40404790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404968"/>
        <function-ref name="isInput" scoped="" ref="0x40404a48"/>
        <function-ref name="toggle" scoped="" ref="0x40404b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40404c08"/>
        <function-ref name="get" scoped="" ref="0x40404ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404dc8"/>
        <function-ref name="set" scoped="" ref="0x40404ea8"/>
        <function-ref name="clr" scoped="" ref="0x40403010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403fe6f8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403fe6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe8d0"/>
        <function-ref name="isInput" scoped="" ref="0x403fe9b0"/>
        <function-ref name="toggle" scoped="" ref="0x403fea90"/>
        <function-ref name="isOutput" scoped="" ref="0x403feb70"/>
        <function-ref name="get" scoped="" ref="0x403fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fed30"/>
        <function-ref name="set" scoped="" ref="0x403fee10"/>
        <function-ref name="clr" scoped="" ref="0x403feef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40405410" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40405410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404055e8"/>
        <function-ref name="isInput" scoped="" ref="0x404056c8"/>
        <function-ref name="toggle" scoped="" ref="0x404057a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40405888"/>
        <function-ref name="get" scoped="" ref="0x40405968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405a48"/>
        <function-ref name="set" scoped="" ref="0x40405b28"/>
        <function-ref name="clr" scoped="" ref="0x40405c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40403170" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40403170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403348"/>
        <function-ref name="isInput" scoped="" ref="0x40403428"/>
        <function-ref name="toggle" scoped="" ref="0x40403508"/>
        <function-ref name="isOutput" scoped="" ref="0x404035e8"/>
        <function-ref name="get" scoped="" ref="0x404036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404037a8"/>
        <function-ref name="set" scoped="" ref="0x40403888"/>
        <function-ref name="clr" scoped="" ref="0x40403968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403fd090" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403fd090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fd268"/>
        <function-ref name="isInput" scoped="" ref="0x403fd348"/>
        <function-ref name="toggle" scoped="" ref="0x403fd428"/>
        <function-ref name="isOutput" scoped="" ref="0x403fd508"/>
        <function-ref name="get" scoped="" ref="0x403fd5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fd6c8"/>
        <function-ref name="set" scoped="" ref="0x403fd7a8"/>
        <function-ref name="clr" scoped="" ref="0x403fd888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40405d68" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40405d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404010"/>
        <function-ref name="isInput" scoped="" ref="0x404040f0"/>
        <function-ref name="toggle" scoped="" ref="0x404041d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404042b0"/>
        <function-ref name="get" scoped="" ref="0x40404390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404470"/>
        <function-ref name="set" scoped="" ref="0x40404550"/>
        <function-ref name="clr" scoped="" ref="0x40404630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40403ac8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40403ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40403d80"/>
        <function-ref name="toggle" scoped="" ref="0x40403e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40402010"/>
        <function-ref name="get" scoped="" ref="0x404020f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404021d0"/>
        <function-ref name="set" scoped="" ref="0x404022b0"/>
        <function-ref name="clr" scoped="" ref="0x40402390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b9d538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b9d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b9d710"/>
        <function-ref name="isInput" scoped="" ref="0x40b9d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b9d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b9d9b0"/>
        <function-ref name="get" scoped="" ref="0x40b9da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b9db70"/>
        <function-ref name="set" scoped="" ref="0x40b9dc50"/>
        <function-ref name="clr" scoped="" ref="0x40b9dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc4010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc41e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bc42c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bc43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc4488"/>
        <function-ref name="get" scoped="" ref="0x40bc4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc4648"/>
        <function-ref name="set" scoped="" ref="0x40bc4728"/>
        <function-ref name="clr" scoped="" ref="0x40bc4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc39e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc3e60"/>
        <function-ref name="get" scoped="" ref="0x40bc2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc20f0"/>
        <function-ref name="set" scoped="" ref="0x40bc21d0"/>
        <function-ref name="clr" scoped="" ref="0x40bc22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc1538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc1710"/>
        <function-ref name="isInput" scoped="" ref="0x40bc17f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc19b0"/>
        <function-ref name="get" scoped="" ref="0x40bc1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc1b70"/>
        <function-ref name="set" scoped="" ref="0x40bc1c50"/>
        <function-ref name="clr" scoped="" ref="0x40bc1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbf010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bbf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bbf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbf488"/>
        <function-ref name="get" scoped="" ref="0x40bbf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbf648"/>
        <function-ref name="set" scoped="" ref="0x40bbf728"/>
        <function-ref name="clr" scoped="" ref="0x40bbf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbe9e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bbeca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bbed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbee60"/>
        <function-ref name="get" scoped="" ref="0x40bbd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbd0f0"/>
        <function-ref name="set" scoped="" ref="0x40bbd1d0"/>
        <function-ref name="clr" scoped="" ref="0x40bbd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbc538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbc710"/>
        <function-ref name="isInput" scoped="" ref="0x40bbc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bbc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbc9b0"/>
        <function-ref name="get" scoped="" ref="0x40bbca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbcb70"/>
        <function-ref name="set" scoped="" ref="0x40bbcc50"/>
        <function-ref name="clr" scoped="" ref="0x40bbcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bba010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bba1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bba2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bba3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bba488"/>
        <function-ref name="get" scoped="" ref="0x40bba568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bba648"/>
        <function-ref name="set" scoped="" ref="0x40bba728"/>
        <function-ref name="clr" scoped="" ref="0x40bba808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40408410" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40408410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404085e8"/>
        <function-ref name="isInput" scoped="" ref="0x404086c8"/>
        <function-ref name="toggle" scoped="" ref="0x404087a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40408888"/>
        <function-ref name="get" scoped="" ref="0x40408968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408a48"/>
        <function-ref name="set" scoped="" ref="0x40408b28"/>
        <function-ref name="clr" scoped="" ref="0x40408c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40406170" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40406170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406348"/>
        <function-ref name="isInput" scoped="" ref="0x40406428"/>
        <function-ref name="toggle" scoped="" ref="0x40406508"/>
        <function-ref name="isOutput" scoped="" ref="0x404065e8"/>
        <function-ref name="get" scoped="" ref="0x404066c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404067a8"/>
        <function-ref name="set" scoped="" ref="0x40406888"/>
        <function-ref name="clr" scoped="" ref="0x40406968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40409128" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40409128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409300"/>
        <function-ref name="isInput" scoped="" ref="0x404093e0"/>
        <function-ref name="toggle" scoped="" ref="0x404094c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404095a0"/>
        <function-ref name="get" scoped="" ref="0x40409680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409760"/>
        <function-ref name="set" scoped="" ref="0x40409840"/>
        <function-ref name="clr" scoped="" ref="0x40409920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40408d68" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40408d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407010"/>
        <function-ref name="isInput" scoped="" ref="0x404070f0"/>
        <function-ref name="toggle" scoped="" ref="0x404071d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404072b0"/>
        <function-ref name="get" scoped="" ref="0x40407390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407470"/>
        <function-ref name="set" scoped="" ref="0x40407550"/>
        <function-ref name="clr" scoped="" ref="0x40407630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40406ac8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40406ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40406d80"/>
        <function-ref name="toggle" scoped="" ref="0x40406e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e010"/>
        <function-ref name="get" scoped="" ref="0x4040e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e1d0"/>
        <function-ref name="set" scoped="" ref="0x4040e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40409a80" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40409a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409c58"/>
        <function-ref name="isInput" scoped="" ref="0x40409d38"/>
        <function-ref name="toggle" scoped="" ref="0x40409e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40409ef8"/>
        <function-ref name="get" scoped="" ref="0x40408010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404080f0"/>
        <function-ref name="set" scoped="" ref="0x404081d0"/>
        <function-ref name="clr" scoped="" ref="0x404082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40407790" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40407790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407968"/>
        <function-ref name="isInput" scoped="" ref="0x40407a48"/>
        <function-ref name="toggle" scoped="" ref="0x40407b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40407c08"/>
        <function-ref name="get" scoped="" ref="0x40407ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407dc8"/>
        <function-ref name="set" scoped="" ref="0x40407ea8"/>
        <function-ref name="clr" scoped="" ref="0x40406010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040e4f0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e968"/>
        <function-ref name="get" scoped="" ref="0x4040ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040eb28"/>
        <function-ref name="set" scoped="" ref="0x4040ec08"/>
        <function-ref name="clr" scoped="" ref="0x4040ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be1418" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be15f0"/>
        <function-ref name="isInput" scoped="" ref="0x40be16d0"/>
        <function-ref name="toggle" scoped="" ref="0x40be17b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40be1890"/>
        <function-ref name="get" scoped="" ref="0x40be1970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be1a50"/>
        <function-ref name="set" scoped="" ref="0x40be1b30"/>
        <function-ref name="clr" scoped="" ref="0x40be1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be0de0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdf010"/>
        <function-ref name="isInput" scoped="" ref="0x40bdf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdf2b0"/>
        <function-ref name="get" scoped="" ref="0x40bdf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bdf470"/>
        <function-ref name="set" scoped="" ref="0x40bdf550"/>
        <function-ref name="clr" scoped="" ref="0x40bdf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bde7f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bde7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bde9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40bdeab0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdeb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdec70"/>
        <function-ref name="get" scoped="" ref="0x40bded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bdee30"/>
        <function-ref name="set" scoped="" ref="0x40bdef10"/>
        <function-ref name="clr" scoped="" ref="0x40bdd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdc228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdc400"/>
        <function-ref name="isInput" scoped="" ref="0x40bdc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdc6a0"/>
        <function-ref name="get" scoped="" ref="0x40bdc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bdc860"/>
        <function-ref name="set" scoped="" ref="0x40bdc940"/>
        <function-ref name="clr" scoped="" ref="0x40bdca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdbc08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdbde0"/>
        <function-ref name="isInput" scoped="" ref="0x40bdbec0"/>
        <function-ref name="toggle" scoped="" ref="0x40bda010"/>
        <function-ref name="isOutput" scoped="" ref="0x40bda0f0"/>
        <function-ref name="get" scoped="" ref="0x40bda1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bda2b0"/>
        <function-ref name="set" scoped="" ref="0x40bda390"/>
        <function-ref name="clr" scoped="" ref="0x40bda470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c036c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c036c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c03898"/>
        <function-ref name="isInput" scoped="" ref="0x40c03978"/>
        <function-ref name="toggle" scoped="" ref="0x40c03a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c03b38"/>
        <function-ref name="get" scoped="" ref="0x40c03c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c03cf8"/>
        <function-ref name="set" scoped="" ref="0x40c03dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c03eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c010b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c010b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c01288"/>
        <function-ref name="isInput" scoped="" ref="0x40c01368"/>
        <function-ref name="toggle" scoped="" ref="0x40c01448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c01528"/>
        <function-ref name="get" scoped="" ref="0x40c01608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c016e8"/>
        <function-ref name="set" scoped="" ref="0x40c017c8"/>
        <function-ref name="clr" scoped="" ref="0x40c018a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c00a88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c00a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c00c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c00d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c00e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c00f00"/>
        <function-ref name="get" scoped="" ref="0x40bff010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bff0f0"/>
        <function-ref name="set" scoped="" ref="0x40bff1d0"/>
        <function-ref name="clr" scoped="" ref="0x40bff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40414e48" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40414e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413050"/>
        <function-ref name="isInput" scoped="" ref="0x40413130"/>
        <function-ref name="toggle" scoped="" ref="0x40413210"/>
        <function-ref name="isOutput" scoped="" ref="0x404132f0"/>
        <function-ref name="get" scoped="" ref="0x404133d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404134b0"/>
        <function-ref name="set" scoped="" ref="0x40413590"/>
        <function-ref name="clr" scoped="" ref="0x40413670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40412ac8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40412ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40412d80"/>
        <function-ref name="toggle" scoped="" ref="0x40412e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40411010"/>
        <function-ref name="get" scoped="" ref="0x404110f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404111d0"/>
        <function-ref name="set" scoped="" ref="0x404112b0"/>
        <function-ref name="clr" scoped="" ref="0x40411390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4040bb00" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4040bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040bcd8"/>
        <function-ref name="isInput" scoped="" ref="0x4040bdb8"/>
        <function-ref name="toggle" scoped="" ref="0x4040be98"/>
        <function-ref name="isOutput" scoped="" ref="0x40414010"/>
        <function-ref name="get" scoped="" ref="0x404140f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404141d0"/>
        <function-ref name="set" scoped="" ref="0x404142b0"/>
        <function-ref name="clr" scoped="" ref="0x40414390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404137d0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404137d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404139a8"/>
        <function-ref name="isInput" scoped="" ref="0x40413a88"/>
        <function-ref name="toggle" scoped="" ref="0x40413b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40413c48"/>
        <function-ref name="get" scoped="" ref="0x40413d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413e08"/>
        <function-ref name="set" scoped="" ref="0x40413ee8"/>
        <function-ref name="clr" scoped="" ref="0x40412010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404114f0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404116c8"/>
        <function-ref name="isInput" scoped="" ref="0x404117a8"/>
        <function-ref name="toggle" scoped="" ref="0x40411888"/>
        <function-ref name="isOutput" scoped="" ref="0x40411968"/>
        <function-ref name="get" scoped="" ref="0x40411a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411b28"/>
        <function-ref name="set" scoped="" ref="0x40411c08"/>
        <function-ref name="clr" scoped="" ref="0x40411ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404144f0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404144f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404146c8"/>
        <function-ref name="isInput" scoped="" ref="0x404147a8"/>
        <function-ref name="toggle" scoped="" ref="0x40414888"/>
        <function-ref name="isOutput" scoped="" ref="0x40414968"/>
        <function-ref name="get" scoped="" ref="0x40414a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414b28"/>
        <function-ref name="set" scoped="" ref="0x40414c08"/>
        <function-ref name="clr" scoped="" ref="0x40414ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40412170" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40412170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412348"/>
        <function-ref name="isInput" scoped="" ref="0x40412428"/>
        <function-ref name="toggle" scoped="" ref="0x40412508"/>
        <function-ref name="isOutput" scoped="" ref="0x404125e8"/>
        <function-ref name="get" scoped="" ref="0x404126c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404127a8"/>
        <function-ref name="set" scoped="" ref="0x40412888"/>
        <function-ref name="clr" scoped="" ref="0x40412968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40411e48" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40411e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410050"/>
        <function-ref name="isInput" scoped="" ref="0x40410130"/>
        <function-ref name="toggle" scoped="" ref="0x40410210"/>
        <function-ref name="isOutput" scoped="" ref="0x404102f0"/>
        <function-ref name="get" scoped="" ref="0x404103d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404104b0"/>
        <function-ref name="set" scoped="" ref="0x40410590"/>
        <function-ref name="clr" scoped="" ref="0x40410670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2bde8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c27010"/>
        <function-ref name="isInput" scoped="" ref="0x40c270f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c271d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c272b0"/>
        <function-ref name="get" scoped="" ref="0x40c27390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c27470"/>
        <function-ref name="set" scoped="" ref="0x40c27550"/>
        <function-ref name="clr" scoped="" ref="0x40c27630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c267f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c267f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c269d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c26ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c26b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c26c70"/>
        <function-ref name="get" scoped="" ref="0x40c26d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c26e30"/>
        <function-ref name="set" scoped="" ref="0x40c26f10"/>
        <function-ref name="clr" scoped="" ref="0x40c25010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c24228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c24228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c24400"/>
        <function-ref name="isInput" scoped="" ref="0x40c244e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c245c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c246a0"/>
        <function-ref name="get" scoped="" ref="0x40c24780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c24860"/>
        <function-ref name="set" scoped="" ref="0x40c24940"/>
        <function-ref name="clr" scoped="" ref="0x40c24a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c23c08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c23c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c23de0"/>
        <function-ref name="isInput" scoped="" ref="0x40c23ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c22010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c220f0"/>
        <function-ref name="get" scoped="" ref="0x40c221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c222b0"/>
        <function-ref name="set" scoped="" ref="0x40c22390"/>
        <function-ref name="clr" scoped="" ref="0x40c22470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c216c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c21898"/>
        <function-ref name="isInput" scoped="" ref="0x40c21978"/>
        <function-ref name="toggle" scoped="" ref="0x40c21a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c21b38"/>
        <function-ref name="get" scoped="" ref="0x40c21c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c21cf8"/>
        <function-ref name="set" scoped="" ref="0x40c21dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c21eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1f0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1f288"/>
        <function-ref name="isInput" scoped="" ref="0x40c1f368"/>
        <function-ref name="toggle" scoped="" ref="0x40c1f448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1f528"/>
        <function-ref name="get" scoped="" ref="0x40c1f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1f6e8"/>
        <function-ref name="set" scoped="" ref="0x40c1f7c8"/>
        <function-ref name="clr" scoped="" ref="0x40c1f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1ea88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1ec60"/>
        <function-ref name="isInput" scoped="" ref="0x40c1ed40"/>
        <function-ref name="toggle" scoped="" ref="0x40c1ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1ef00"/>
        <function-ref name="get" scoped="" ref="0x40c1d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1d0f0"/>
        <function-ref name="set" scoped="" ref="0x40c1d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1c538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1c710"/>
        <function-ref name="isInput" scoped="" ref="0x40c1c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1c9b0"/>
        <function-ref name="get" scoped="" ref="0x40c1ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1cb70"/>
        <function-ref name="set" scoped="" ref="0x40c1cc50"/>
        <function-ref name="clr" scoped="" ref="0x40c1cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404156b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404156b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415888"/>
        <function-ref name="isInput" scoped="" ref="0x40415968"/>
        <function-ref name="toggle" scoped="" ref="0x40415a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40415b28"/>
        <function-ref name="get" scoped="" ref="0x40415c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415ce8"/>
        <function-ref name="set" scoped="" ref="0x40415dc8"/>
        <function-ref name="clr" scoped="" ref="0x40415ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041d330" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d508"/>
        <function-ref name="isInput" scoped="" ref="0x4041d5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4041d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d7a8"/>
        <function-ref name="get" scoped="" ref="0x4041d888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d968"/>
        <function-ref name="set" scoped="" ref="0x4041da48"/>
        <function-ref name="clr" scoped="" ref="0x4041db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404163d8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404163d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404165b0"/>
        <function-ref name="isInput" scoped="" ref="0x40416690"/>
        <function-ref name="toggle" scoped="" ref="0x40416770"/>
        <function-ref name="isOutput" scoped="" ref="0x40416850"/>
        <function-ref name="get" scoped="" ref="0x40416930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416a10"/>
        <function-ref name="set" scoped="" ref="0x40416af0"/>
        <function-ref name="clr" scoped="" ref="0x40416bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041e030" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e208"/>
        <function-ref name="isInput" scoped="" ref="0x4041e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e4a8"/>
        <function-ref name="get" scoped="" ref="0x4041e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e668"/>
        <function-ref name="set" scoped="" ref="0x4041e748"/>
        <function-ref name="clr" scoped="" ref="0x4041e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041dc88" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041de60"/>
        <function-ref name="isInput" scoped="" ref="0x4041c010"/>
        <function-ref name="toggle" scoped="" ref="0x4041c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c1d0"/>
        <function-ref name="get" scoped="" ref="0x4041c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c390"/>
        <function-ref name="set" scoped="" ref="0x4041c470"/>
        <function-ref name="clr" scoped="" ref="0x4041c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40416d30" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40416d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416f08"/>
        <function-ref name="isInput" scoped="" ref="0x40415010"/>
        <function-ref name="toggle" scoped="" ref="0x404150f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404151d0"/>
        <function-ref name="get" scoped="" ref="0x404152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415390"/>
        <function-ref name="set" scoped="" ref="0x40415470"/>
        <function-ref name="clr" scoped="" ref="0x40415550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041e988" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eb60"/>
        <function-ref name="isInput" scoped="" ref="0x4041ec40"/>
        <function-ref name="toggle" scoped="" ref="0x4041ed20"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ee00"/>
        <function-ref name="get" scoped="" ref="0x4041eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d010"/>
        <function-ref name="set" scoped="" ref="0x4041d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4041d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041c6b0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c888"/>
        <function-ref name="isInput" scoped="" ref="0x4041c968"/>
        <function-ref name="toggle" scoped="" ref="0x4041ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4041cb28"/>
        <function-ref name="get" scoped="" ref="0x4041cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041cce8"/>
        <function-ref name="set" scoped="" ref="0x4041cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4041cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c46938" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c46938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c46b10"/>
        <function-ref name="isInput" scoped="" ref="0x40c46bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40c46cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c46db0"/>
        <function-ref name="get" scoped="" ref="0x40c46e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c45010"/>
        <function-ref name="set" scoped="" ref="0x40c450f0"/>
        <function-ref name="clr" scoped="" ref="0x40c451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c443b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c443b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c44588"/>
        <function-ref name="isInput" scoped="" ref="0x40c44668"/>
        <function-ref name="toggle" scoped="" ref="0x40c44748"/>
        <function-ref name="isOutput" scoped="" ref="0x40c44828"/>
        <function-ref name="get" scoped="" ref="0x40c44908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c449e8"/>
        <function-ref name="set" scoped="" ref="0x40c44ac8"/>
        <function-ref name="clr" scoped="" ref="0x40c44ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6fd70" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6e010"/>
        <function-ref name="isInput" scoped="" ref="0x40c6e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c6e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6e2b0"/>
        <function-ref name="get" scoped="" ref="0x40c6e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6e470"/>
        <function-ref name="set" scoped="" ref="0x40c6e550"/>
        <function-ref name="clr" scoped="" ref="0x40c6e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6d7f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c6dab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c6db90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6dc70"/>
        <function-ref name="get" scoped="" ref="0x40c6dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6de30"/>
        <function-ref name="set" scoped="" ref="0x40c6df10"/>
        <function-ref name="clr" scoped="" ref="0x40c6c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6b228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6b400"/>
        <function-ref name="isInput" scoped="" ref="0x40c6b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c6b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6b6a0"/>
        <function-ref name="get" scoped="" ref="0x40c6b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6b860"/>
        <function-ref name="set" scoped="" ref="0x40c6b940"/>
        <function-ref name="clr" scoped="" ref="0x40c6ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6ac08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6ade0"/>
        <function-ref name="isInput" scoped="" ref="0x40c6aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c69010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c690f0"/>
        <function-ref name="get" scoped="" ref="0x40c691d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c692b0"/>
        <function-ref name="set" scoped="" ref="0x40c69390"/>
        <function-ref name="clr" scoped="" ref="0x40c69470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c686c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c686c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c68898"/>
        <function-ref name="isInput" scoped="" ref="0x40c68978"/>
        <function-ref name="toggle" scoped="" ref="0x40c68a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c68b38"/>
        <function-ref name="get" scoped="" ref="0x40c68c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c68cf8"/>
        <function-ref name="set" scoped="" ref="0x40c68dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c68eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c660b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c660b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c66288"/>
        <function-ref name="isInput" scoped="" ref="0x40c66368"/>
        <function-ref name="toggle" scoped="" ref="0x40c66448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c66528"/>
        <function-ref name="get" scoped="" ref="0x40c66608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c666e8"/>
        <function-ref name="set" scoped="" ref="0x40c667c8"/>
        <function-ref name="clr" scoped="" ref="0x40c668a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40422880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40422880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422a58"/>
        <function-ref name="isInput" scoped="" ref="0x40422b38"/>
        <function-ref name="toggle" scoped="" ref="0x40422c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40422cf8"/>
        <function-ref name="get" scoped="" ref="0x40422dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422eb8"/>
        <function-ref name="set" scoped="" ref="0x40421010"/>
        <function-ref name="clr" scoped="" ref="0x404210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404350b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404350b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435288"/>
        <function-ref name="isInput" scoped="" ref="0x40435368"/>
        <function-ref name="toggle" scoped="" ref="0x40435448"/>
        <function-ref name="isOutput" scoped="" ref="0x40435528"/>
        <function-ref name="get" scoped="" ref="0x40435608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404356e8"/>
        <function-ref name="set" scoped="" ref="0x404357c8"/>
        <function-ref name="clr" scoped="" ref="0x404358a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40433880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40433880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433a58"/>
        <function-ref name="isInput" scoped="" ref="0x40433b38"/>
        <function-ref name="toggle" scoped="" ref="0x40433c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40433cf8"/>
        <function-ref name="get" scoped="" ref="0x40433dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433eb8"/>
        <function-ref name="set" scoped="" ref="0x40432010"/>
        <function-ref name="clr" scoped="" ref="0x404320f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404300b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404300b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430288"/>
        <function-ref name="isInput" scoped="" ref="0x40430368"/>
        <function-ref name="toggle" scoped="" ref="0x40430448"/>
        <function-ref name="isOutput" scoped="" ref="0x40430528"/>
        <function-ref name="get" scoped="" ref="0x40430608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404306e8"/>
        <function-ref name="set" scoped="" ref="0x404307c8"/>
        <function-ref name="clr" scoped="" ref="0x404308a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40439880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40439880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439a58"/>
        <function-ref name="isInput" scoped="" ref="0x40439b38"/>
        <function-ref name="toggle" scoped="" ref="0x40439c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40439cf8"/>
        <function-ref name="get" scoped="" ref="0x40439dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439eb8"/>
        <function-ref name="set" scoped="" ref="0x40438010"/>
        <function-ref name="clr" scoped="" ref="0x404380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404360b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404360b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436288"/>
        <function-ref name="isInput" scoped="" ref="0x40436368"/>
        <function-ref name="toggle" scoped="" ref="0x40436448"/>
        <function-ref name="isOutput" scoped="" ref="0x40436528"/>
        <function-ref name="get" scoped="" ref="0x40436608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404366e8"/>
        <function-ref name="set" scoped="" ref="0x404367c8"/>
        <function-ref name="clr" scoped="" ref="0x404368a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404408f0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40440ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40440c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40440d68"/>
        <function-ref name="get" scoped="" ref="0x40440e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440f28"/>
        <function-ref name="set" scoped="" ref="0x4043e018"/>
        <function-ref name="clr" scoped="" ref="0x4043e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043c0b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c288"/>
        <function-ref name="isInput" scoped="" ref="0x4043c368"/>
        <function-ref name="toggle" scoped="" ref="0x4043c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c528"/>
        <function-ref name="get" scoped="" ref="0x4043c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c6e8"/>
        <function-ref name="set" scoped="" ref="0x4043c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4043c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40446880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40446880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446a58"/>
        <function-ref name="isInput" scoped="" ref="0x40446b38"/>
        <function-ref name="toggle" scoped="" ref="0x40446c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40446cf8"/>
        <function-ref name="get" scoped="" ref="0x40446dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446eb8"/>
        <function-ref name="set" scoped="" ref="0x40445010"/>
        <function-ref name="clr" scoped="" ref="0x404450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404420b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404420b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442288"/>
        <function-ref name="isInput" scoped="" ref="0x40442368"/>
        <function-ref name="toggle" scoped="" ref="0x40442448"/>
        <function-ref name="isOutput" scoped="" ref="0x40442528"/>
        <function-ref name="get" scoped="" ref="0x40442608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404426e8"/>
        <function-ref name="set" scoped="" ref="0x404427c8"/>
        <function-ref name="clr" scoped="" ref="0x404428a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044c880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044ca58"/>
        <function-ref name="isInput" scoped="" ref="0x4044cb38"/>
        <function-ref name="toggle" scoped="" ref="0x4044cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ccf8"/>
        <function-ref name="get" scoped="" ref="0x4044cdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ceb8"/>
        <function-ref name="set" scoped="" ref="0x4044b010"/>
        <function-ref name="clr" scoped="" ref="0x4044b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404490b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404490b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449288"/>
        <function-ref name="isInput" scoped="" ref="0x40449368"/>
        <function-ref name="toggle" scoped="" ref="0x40449448"/>
        <function-ref name="isOutput" scoped="" ref="0x40449528"/>
        <function-ref name="get" scoped="" ref="0x40449608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404496e8"/>
        <function-ref name="set" scoped="" ref="0x404497c8"/>
        <function-ref name="clr" scoped="" ref="0x404498a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40452880" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40452880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452a58"/>
        <function-ref name="isInput" scoped="" ref="0x40452b38"/>
        <function-ref name="toggle" scoped="" ref="0x40452c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40452cf8"/>
        <function-ref name="get" scoped="" ref="0x40452dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452eb8"/>
        <function-ref name="set" scoped="" ref="0x40451010"/>
        <function-ref name="clr" scoped="" ref="0x404510f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4046d4d0" loc="50:/opt/tinyos-2.1.0/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4046d4d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4a58"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4a58"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4046d880" loc="51:/opt/tinyos-2.1.0/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4046d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4046da58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4046db38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4046dc18"/>
        <function-ref name="actualMicro" scoped="" ref="0x4046dcf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4046ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4047e030" loc="49:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4047e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047e208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4047f2b8" loc="46:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4047f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4047f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4047fc18" loc="48:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4047fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4047f650" loc="47:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4047f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047f828"/>
        <function-ref name="taskLoop" scoped="" ref="0x4047f908"/>
        <function-ref name="runNextTask" scoped="" ref="0x4047f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f29c0" loc="37:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f2b98"/>
        <function-ref name="runTask" scoped="" ref="0x402f2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ea250" loc="36:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ea250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ea428"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ea508"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ea5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40363d30" loc="45:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40363d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40363f08"/>
        <function-ref name="runTask" scoped="" ref="0x40362010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403629b8" loc="46:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403629b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40362b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403634f8" loc="44:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403634f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403636d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403637b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40363890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40376508" loc="69:/opt/tinyos-2.1.0/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40376508"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403766e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40359278" loc="65:/opt/tinyos-2.1.0/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40359278"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40359450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40359f28" loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40359f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40379110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x404bfb30" loc="54:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x404bfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404bfd08"/>
        <function-ref name="stopDone" scoped="" ref="0x404bfde8"/>
        <function-ref name="start" scoped="" ref="0x404bfec8"/>
        <function-ref name="stop" scoped="" ref="0x404c2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40484040" loc="49:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40484040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40484218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x404a9380" loc="51:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404a9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404a9558"/>
        <function-ref name="getPayload" scoped="" ref="0x404a9638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404a9718"/>
        <function-ref name="cancel" scoped="" ref="0x404a97f8"/>
        <function-ref name="sendDone" scoped="" ref="0x404a98d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x404c8e50" loc="55:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404c1050"/>
        <function-ref name="payloadLength" scoped="" ref="0x404c1130"/>
        <function-ref name="getPayload" scoped="" ref="0x404c1210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404c12f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404c13d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x404a4ea0" loc="50:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404a4ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404830c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x404b6790" loc="53:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x404b6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404a3330"/>
        <function-ref name="fired" scoped="" ref="0x40494520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40494c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x404949d0"/>
        <function-ref name="getdt" scoped="" ref="0x404a37e0"/>
        <function-ref name="gett0" scoped="" ref="0x404a3588"/>
        <function-ref name="isRunning" scoped="" ref="0x40494778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404b6db8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404a3010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40494048"/>
        <function-ref name="stop" scoped="" ref="0x404942c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404893f8" loc="48:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404893f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404895d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404896b0"/>
        <function-ref name="led1On" scoped="" ref="0x40489790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40489870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40489950"/>
        <function-ref name="get" scoped="" ref="0x40489a30"/>
        <function-ref name="led1Off" scoped="" ref="0x40489b10"/>
        <function-ref name="led2Off" scoped="" ref="0x40489e90"/>
        <function-ref name="set" scoped="" ref="0x40489bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40489cd0"/>
        <function-ref name="led2On" scoped="" ref="0x40489db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404ae140" loc="52:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404ae140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404ae318"/>
        <function-ref name="source" scoped="" ref="0x404ae3f8"/>
        <function-ref name="address" scoped="" ref="0x404ae4d8"/>
        <function-ref name="destination" scoped="" ref="0x404ae5b8"/>
        <function-ref name="setSource" scoped="" ref="0x404ae698"/>
        <function-ref name="setDestination" scoped="" ref="0x404ae778"/>
        <function-ref name="type" scoped="" ref="0x404ae858"/>
        <function-ref name="setType" scoped="" ref="0x404ae938"/>
        <function-ref name="isForMe" scoped="" ref="0x404aea18"/>
        <function-ref name="setGroup" scoped="" ref="0x404aeaf8"/>
        <function-ref name="localGroup" scoped="" ref="0x404aebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403874d8" loc="35:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403874d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403876b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40387790"/>
        <function-ref name="led1On" scoped="" ref="0x40387870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40387950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40387a30"/>
        <function-ref name="get" scoped="" ref="0x40387b10"/>
        <function-ref name="led1Off" scoped="" ref="0x40387bf0"/>
        <function-ref name="led2Off" scoped="" ref="0x404d6010"/>
        <function-ref name="set" scoped="" ref="0x40387cd0"/>
        <function-ref name="led0On" scoped="" ref="0x40387db0"/>
        <function-ref name="led2On" scoped="" ref="0x40387e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404d3940" loc="39:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404d3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3b18"/>
        <function-ref name="isInput" scoped="" ref="0x404d3bf8"/>
        <function-ref name="toggle" scoped="" ref="0x404d3cd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3db8"/>
        <function-ref name="get" scoped="" ref="0x404d3e98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2010"/>
        <function-ref name="set" scoped="" ref="0x404d20f0"/>
        <function-ref name="clr" scoped="" ref="0x404d21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404d6890" loc="35:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404d6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404d23c0" loc="40:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404d23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2598"/>
        <function-ref name="isInput" scoped="" ref="0x404d2678"/>
        <function-ref name="toggle" scoped="" ref="0x404d2758"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2838"/>
        <function-ref name="get" scoped="" ref="0x404d2918"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d29f8"/>
        <function-ref name="set" scoped="" ref="0x404d2ad8"/>
        <function-ref name="clr" scoped="" ref="0x404d2bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404d6bd8" loc="36:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404d6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404d6db0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404d6e90"/>
        <function-ref name="led1On" scoped="" ref="0x404d3010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404d30f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404d31d0"/>
        <function-ref name="get" scoped="" ref="0x404d32b0"/>
        <function-ref name="led1Off" scoped="" ref="0x404d3390"/>
        <function-ref name="led2Off" scoped="" ref="0x404d3710"/>
        <function-ref name="set" scoped="" ref="0x404d3470"/>
        <function-ref name="led0On" scoped="" ref="0x404d3550"/>
        <function-ref name="led2On" scoped="" ref="0x404d3630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404d2da8" loc="41:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404d2da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1010"/>
        <function-ref name="isInput" scoped="" ref="0x404d10f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d12b0"/>
        <function-ref name="get" scoped="" ref="0x404d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1470"/>
        <function-ref name="set" scoped="" ref="0x404d1550"/>
        <function-ref name="clr" scoped="" ref="0x404d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404eb010" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404eb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404eb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb488"/>
        <function-ref name="get" scoped="" ref="0x404eb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb648"/>
        <function-ref name="set" scoped="" ref="0x404eb728"/>
        <function-ref name="clr" scoped="" ref="0x404eb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404eba18" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404eba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ebbf0"/>
        <function-ref name="isInput" scoped="" ref="0x404ebcd0"/>
        <function-ref name="toggle" scoped="" ref="0x404ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebe90"/>
        <function-ref name="get" scoped="" ref="0x404ea010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea0f0"/>
        <function-ref name="set" scoped="" ref="0x404ea1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404eae48" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e9050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404ea4c0" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404ea4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea698"/>
        <function-ref name="isInput" scoped="" ref="0x404ea778"/>
        <function-ref name="toggle" scoped="" ref="0x404ea858"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea938"/>
        <function-ref name="get" scoped="" ref="0x404eaa18"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eaaf8"/>
        <function-ref name="set" scoped="" ref="0x404eabd8"/>
        <function-ref name="clr" scoped="" ref="0x404eacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b1a2c0" loc="41:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b1a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b1a498"/>
        <function-ref name="getPayload" scoped="" ref="0x40b1a578"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b1a658"/>
        <function-ref name="cancel" scoped="" ref="0x40b1a738"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1a818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b1a958" loc="42:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b1a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b1ab30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b1ac10"/>
        <function-ref name="getPayload" scoped="" ref="0x40b1acf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b1add0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b1aeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b19010" loc="43:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b191e8"/>
        <function-ref name="source" scoped="" ref="0x40b192c8"/>
        <function-ref name="address" scoped="" ref="0x40b193a8"/>
        <function-ref name="destination" scoped="" ref="0x40b19488"/>
        <function-ref name="setSource" scoped="" ref="0x40b19568"/>
        <function-ref name="setDestination" scoped="" ref="0x40b19648"/>
        <function-ref name="type" scoped="" ref="0x40b19728"/>
        <function-ref name="setType" scoped="" ref="0x40b19808"/>
        <function-ref name="isForMe" scoped="" ref="0x40b198e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40b199c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40b19aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40b19c08" loc="44:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40b19c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b19de0"/>
        <function-ref name="noAck" scoped="" ref="0x40b19ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cdfe00" loc="36:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cdfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cdc010"/>
        <function-ref name="getPayload" scoped="" ref="0x40cdc0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cdc1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40cdc2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40cdc500" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cdc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cdc6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cdc7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cdc898"/>
        <function-ref name="cancel" scoped="" ref="0x40cdc978"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40cdcb98" loc="39:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cdcb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cdcd70"/>
        <function-ref name="source" scoped="" ref="0x40cdce50"/>
        <function-ref name="address" scoped="" ref="0x40cdb010"/>
        <function-ref name="destination" scoped="" ref="0x40cdb0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40cdb1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40cdb2b0"/>
        <function-ref name="type" scoped="" ref="0x40cdb390"/>
        <function-ref name="setType" scoped="" ref="0x40cdb470"/>
        <function-ref name="isForMe" scoped="" ref="0x40cdb550"/>
        <function-ref name="setGroup" scoped="" ref="0x40cdb630"/>
        <function-ref name="localGroup" scoped="" ref="0x40cdb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40503220" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40503220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405033f8"/>
        <function-ref name="getPayload" scoped="" ref="0x405034d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405035b8"/>
        <function-ref name="cancel" scoped="" ref="0x40503698"/>
        <function-ref name="sendDone" scoped="" ref="0x40503778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40531ab8" loc="40:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40531ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40531ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x40531d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40531e60"/>
        <function-ref name="cancel" scoped="" ref="0x40530010"/>
        <function-ref name="sendDone" scoped="" ref="0x405300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40531348" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40531348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40531530"/>
        <function-ref name="getPayload" scoped="" ref="0x40531610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405316f0"/>
        <function-ref name="cancel" scoped="" ref="0x405317d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405318b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40530e08" loc="42:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40530e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4052f010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4052f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4052f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4052f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4052f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x4052f510" loc="161:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x4052f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052f6e8"/>
        <function-ref name="runTask" scoped="" ref="0x4052f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x4052f948" loc="118:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x4052f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052fb20"/>
        <function-ref name="runTask" scoped="" ref="0x4052fc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40530230" loc="41:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40530230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40530408"/>
        <function-ref name="source" scoped="" ref="0x405304e8"/>
        <function-ref name="address" scoped="" ref="0x405305c8"/>
        <function-ref name="destination" scoped="" ref="0x405306a8"/>
        <function-ref name="setSource" scoped="" ref="0x40530788"/>
        <function-ref name="setDestination" scoped="" ref="0x40530868"/>
        <function-ref name="type" scoped="" ref="0x40530948"/>
        <function-ref name="setType" scoped="" ref="0x40530a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40530b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40530be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40530cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4052dbc8" loc="28:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4052dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4052dda0"/>
        <function-ref name="stopDone" scoped="" ref="0x4052de80"/>
        <function-ref name="start" scoped="" ref="0x4053a010"/>
        <function-ref name="stop" scoped="" ref="0x4053a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4053d650" loc="40:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4053d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40549170"/>
        <function-ref name="clear" scoped="" ref="0x40549520"/>
        <function-ref name="isValid" scoped="" ref="0x4053dda0"/>
        <function-ref name="set" scoped="" ref="0x405498d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4053a550" loc="30:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4053a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4053a728"/>
        <function-ref name="getPayload" scoped="" ref="0x4053a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4053a8e8"/>
        <function-ref name="cancel" scoped="" ref="0x4053a9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4053aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405395c8" loc="32:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405395c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405397a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40539920" loc="33:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40539920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40539af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40539bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40539cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40539d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40539e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40540c68" loc="37:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40540c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40540e40"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40540f20"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40536018"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405360f8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405361d8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x405362b8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40536398"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40536478"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40536558"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40536638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4053af10" loc="31:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4053af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40539108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40538cf8" loc="36:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40538cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40538ed0"/>
        <function-ref name="noAck" scoped="" ref="0x40537010"/>
        <function-ref name="wasAcked" scoped="" ref="0x405370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40538040" loc="34:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40538040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40538218"/>
        <function-ref name="source" scoped="" ref="0x405382f8"/>
        <function-ref name="address" scoped="" ref="0x405383d8"/>
        <function-ref name="destination" scoped="" ref="0x405384b8"/>
        <function-ref name="setSource" scoped="" ref="0x40538598"/>
        <function-ref name="setDestination" scoped="" ref="0x40538678"/>
        <function-ref name="type" scoped="" ref="0x40538758"/>
        <function-ref name="setType" scoped="" ref="0x40538838"/>
        <function-ref name="isForMe" scoped="" ref="0x40538918"/>
        <function-ref name="setGroup" scoped="" ref="0x405389f8"/>
        <function-ref name="localGroup" scoped="" ref="0x40538ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x4054ac68" loc="39:/opt/tinyos-2.1.0/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4054ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405357a0"/>
        <function-ref name="clear" scoped="" ref="0x40535b50"/>
        <function-ref name="isValid" scoped="" ref="0x405353f0"/>
        <function-ref name="set" scoped="" ref="0x40535f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40563e98" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40563e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405620c0"/>
        <function-ref name="stopDone" scoped="" ref="0x405621a0"/>
        <function-ref name="start" scoped="" ref="0x40562280"/>
        <function-ref name="stop" scoped="" ref="0x40562360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4056cb60" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4056cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40567780"/>
        <function-ref name="get" scoped="" ref="0x405674c0"/>
        <function-ref name="isSet" scoped="" ref="0x40567200"/>
        <function-ref name="set" scoped="" ref="0x40567a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40561b80" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40561b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40561d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40561e38"/>
        <function-ref name="getPayload" scoped="" ref="0x40561f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40560010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405627c0" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405627c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40562998"/>
        <function-ref name="getPayload" scoped="" ref="0x40562a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40562b58"/>
        <function-ref name="cancel" scoped="" ref="0x40562c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40562d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40561828" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40561828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40561a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4055d7f0" loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4055d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4056c3d8"/>
        <function-ref name="get" scoped="" ref="0x4056c118"/>
        <function-ref name="isSet" scoped="" ref="0x4055de38"/>
        <function-ref name="set" scoped="" ref="0x4056c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4055f598" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4055f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4055f770"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4055f850"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4055f930"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4055fa10"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4055faf0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4055fbd0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4055fcb0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4055fd90"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4055fe70"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4055e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40561190" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40561190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40561368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40566100" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40566100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40566c00"/>
        <function-ref name="clear" scoped="" ref="0x40574010"/>
        <function-ref name="isValid" scoped="" ref="0x40566850"/>
        <function-ref name="set" scoped="" ref="0x405743c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405693e0" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405693e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4055d010"/>
        <function-ref name="get" scoped="" ref="0x40569ce8"/>
        <function-ref name="isSet" scoped="" ref="0x40569a28"/>
        <function-ref name="set" scoped="" ref="0x4055d2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4055f010" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4055f1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4055f2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4055f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40560288" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40560288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40560460"/>
        <function-ref name="source" scoped="" ref="0x40560540"/>
        <function-ref name="address" scoped="" ref="0x40560620"/>
        <function-ref name="destination" scoped="" ref="0x40560700"/>
        <function-ref name="setSource" scoped="" ref="0x405607e0"/>
        <function-ref name="setDestination" scoped="" ref="0x405608c0"/>
        <function-ref name="type" scoped="" ref="0x405609a0"/>
        <function-ref name="setType" scoped="" ref="0x40560a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40560b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40560c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40560d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40574af8" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40574af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405736b8"/>
        <function-ref name="clear" scoped="" ref="0x40573a68"/>
        <function-ref name="isValid" scoped="" ref="0x40573308"/>
        <function-ref name="set" scoped="" ref="0x40573e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4058a1d8" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4058a1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4058aab0"/>
        <function-ref name="channelError" scoped="" ref="0x4058a490"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4058a570"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4058a650"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4058a730"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4058a810"/>
        <function-ref name="timerTick" scoped="" ref="0x4058a8f0"/>
        <function-ref name="getSender" scoped="" ref="0x4058a9d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4058a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405949c8" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405949c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40594ba0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40594c80"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40594d60"/>
        <function-ref name="timerTick" scoped="" ref="0x40594e40"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40594f20"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x4057f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4057fbe0" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4057fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x4057fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40587638" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40587638"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40587810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4056d8b0" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4056d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4056da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40584228" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40584228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40584400"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405844e0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405845c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405846a0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40584780"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40584860"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40584940"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40584a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40593040" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40593040"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40593218"/>
        <function-ref name="getDSN" scoped="" ref="0x405932f8"/>
        <function-ref name="setFCF" scoped="" ref="0x405933d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405934b8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40593598"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40593678"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40593758"/>
        <function-ref name="setDSN" scoped="" ref="0x40593838"/>
        <function-ref name="createAckReply" scoped="" ref="0x40593918"/>
        <function-ref name="getHeader" scoped="" ref="0x405939f8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40593ad8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40593bb8"/>
        <function-ref name="setType" scoped="" ref="0x40593c98"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40593df8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40593ed8"/>
        <function-ref name="setLength" scoped="" ref="0x40592010"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405920f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405921d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405922b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40592390"/>
        <function-ref name="setFramePending" scoped="" ref="0x40592470"/>
        <function-ref name="getLength" scoped="" ref="0x40592550"/>
        <function-ref name="setDestPan" scoped="" ref="0x40592630"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40592710"/>
        <function-ref name="getFCF" scoped="" ref="0x405927f0"/>
        <function-ref name="getType" scoped="" ref="0x405929d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40592ab0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40592b90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40592c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40592df0" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40592df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a0010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405a00f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405a01d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a02b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405a0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405ac078" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405ac078"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405ac250"/>
        <function-ref name="wait" scoped="" ref="0x405ac330"/>
        <function-ref name="cancel" scoped="" ref="0x405ac410"/>
        <function-ref name="isFree" scoped="" ref="0x405ac4f0"/>
        <function-ref name="getNow" scoped="" ref="0x405ac5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405818e8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405818e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40581ac0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40581ba0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40581c80"/>
        <function-ref name="getSender" scoped="" ref="0x40581d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40588a18" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40588a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40588bf0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40588cd0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40588db0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40588e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x4057a920" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x4057a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x4057aaf8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x4056e0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4057acb8"/>
        <function-ref name="setLength" scoped="" ref="0x4057ad98"/>
        <function-ref name="getLength" scoped="" ref="0x4057ae78"/>
        <function-ref name="getMaxLength" scoped="" ref="0x4056e010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4057abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405e1d18" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405e1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405df8f0"/>
        <function-ref name="get" scoped="" ref="0x405df630"/>
        <function-ref name="isSet" scoped="" ref="0x405df370"/>
        <function-ref name="set" scoped="" ref="0x405dfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4056fa40" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4056fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4056fc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x4056fcf8"/>
        <function-ref name="getPayload" scoped="" ref="0x4056fdd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056feb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405e2930" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405e2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e1590"/>
        <function-ref name="get" scoped="" ref="0x405e12d0"/>
        <function-ref name="isSet" scoped="" ref="0x405e1010"/>
        <function-ref name="set" scoped="" ref="0x405e1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x405de120" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x405de120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405dece8"/>
        <function-ref name="get" scoped="" ref="0x405dea28"/>
        <function-ref name="isSet" scoped="" ref="0x405de768"/>
        <function-ref name="set" scoped="" ref="0x405dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x405dc540" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x405dc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405db118"/>
        <function-ref name="get" scoped="" ref="0x405dce48"/>
        <function-ref name="isSet" scoped="" ref="0x405dcb88"/>
        <function-ref name="set" scoped="" ref="0x405db3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405dba10" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405dba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ec5b0"/>
        <function-ref name="clear" scoped="" ref="0x405ec960"/>
        <function-ref name="isValid" scoped="" ref="0x405ec200"/>
        <function-ref name="set" scoped="" ref="0x405ecd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405d3e60" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405d3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405e3050"/>
        <function-ref name="noAck" scoped="" ref="0x405e3130"/>
        <function-ref name="wasAcked" scoped="" ref="0x405e3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405e3568" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e2150"/>
        <function-ref name="get" scoped="" ref="0x405e3e70"/>
        <function-ref name="isSet" scoped="" ref="0x405e3bb0"/>
        <function-ref name="set" scoped="" ref="0x405e2410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405d31a8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405d31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d3380"/>
        <function-ref name="source" scoped="" ref="0x405d3460"/>
        <function-ref name="address" scoped="" ref="0x405d3540"/>
        <function-ref name="destination" scoped="" ref="0x405d3620"/>
        <function-ref name="setSource" scoped="" ref="0x405d3700"/>
        <function-ref name="setDestination" scoped="" ref="0x405d37e0"/>
        <function-ref name="type" scoped="" ref="0x405d38c0"/>
        <function-ref name="setType" scoped="" ref="0x405d39a0"/>
        <function-ref name="isForMe" scoped="" ref="0x405d3a80"/>
        <function-ref name="setGroup" scoped="" ref="0x405d3b60"/>
        <function-ref name="localGroup" scoped="" ref="0x405d3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405ea488" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405ea488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405e9010"/>
        <function-ref name="clear" scoped="" ref="0x405e93c0"/>
        <function-ref name="isValid" scoped="" ref="0x405eabd8"/>
        <function-ref name="set" scoped="" ref="0x405e9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405f4d18" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405f4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f28f0"/>
        <function-ref name="get" scoped="" ref="0x405f2630"/>
        <function-ref name="isSet" scoped="" ref="0x405f2370"/>
        <function-ref name="set" scoped="" ref="0x405f2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405e6c30" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405e6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e6e08"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e6ee8"/>
        <function-ref name="getPayload" scoped="" ref="0x405e4010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e40f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405f58f8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405f58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f4590"/>
        <function-ref name="get" scoped="" ref="0x405f42d0"/>
        <function-ref name="isSet" scoped="" ref="0x405f4010"/>
        <function-ref name="set" scoped="" ref="0x405f4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x405f1120" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x405f1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f1ce8"/>
        <function-ref name="get" scoped="" ref="0x405f1a28"/>
        <function-ref name="isSet" scoped="" ref="0x405f1768"/>
        <function-ref name="set" scoped="" ref="0x405ef010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x405fcc40" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x405fcc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405fce18"/>
        <function-ref name="getDSN" scoped="" ref="0x405fcef8"/>
        <function-ref name="setFCF" scoped="" ref="0x405fb010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405fb0f0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x405fb1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405fb2b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405fb390"/>
        <function-ref name="setDSN" scoped="" ref="0x405fb470"/>
        <function-ref name="createAckReply" scoped="" ref="0x405fb550"/>
        <function-ref name="getHeader" scoped="" ref="0x405fb630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405fb710"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405fb7f0"/>
        <function-ref name="setType" scoped="" ref="0x405fb8d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405fba30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405fbb10"/>
        <function-ref name="setLength" scoped="" ref="0x405fbbf0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405fbcd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405fbdb0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405fbe90"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405fa010"/>
        <function-ref name="setFramePending" scoped="" ref="0x405fa0f0"/>
        <function-ref name="getLength" scoped="" ref="0x405fa1d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x405fa2b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405fa390"/>
        <function-ref name="getFCF" scoped="" ref="0x405fa470"/>
        <function-ref name="getType" scoped="" ref="0x405fa650"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405fa730"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405fa810"/>
        <function-ref name="getFramePending" scoped="" ref="0x405fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x405ef540" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x405ef540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ee118"/>
        <function-ref name="get" scoped="" ref="0x405efe48"/>
        <function-ref name="isSet" scoped="" ref="0x405efb88"/>
        <function-ref name="set" scoped="" ref="0x405ee3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405eea10" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405eea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ed5b0"/>
        <function-ref name="clear" scoped="" ref="0x405ed960"/>
        <function-ref name="isValid" scoped="" ref="0x405ed200"/>
        <function-ref name="set" scoped="" ref="0x405edd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x405f78c8" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405f78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405f7f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405e6718" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405e6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405e68f0"/>
        <function-ref name="noAck" scoped="" ref="0x405e69d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405e6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405e4528" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405e4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f5118"/>
        <function-ref name="get" scoped="" ref="0x405e4e30"/>
        <function-ref name="isSet" scoped="" ref="0x405e4b70"/>
        <function-ref name="set" scoped="" ref="0x405f53d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x405f9318" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x405f9318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405f9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405fd488" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405fd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405fc010"/>
        <function-ref name="clear" scoped="" ref="0x405fc3c0"/>
        <function-ref name="isValid" scoped="" ref="0x405fdbd8"/>
        <function-ref name="set" scoped="" ref="0x405fc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x405e79b8" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x405e79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405e7b90"/>
        <function-ref name="getDSN" scoped="" ref="0x405e7c70"/>
        <function-ref name="setFCF" scoped="" ref="0x405e7d50"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405e7e30"/>
        <function-ref name="set6LowPan" scoped="" ref="0x405e7f10"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4062f010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4062f0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x4062f1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4062f2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x4062f390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4062f470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4062f550"/>
        <function-ref name="setType" scoped="" ref="0x4062f630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4062f790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4062f870"/>
        <function-ref name="setLength" scoped="" ref="0x4062f950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4062fa30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4062fb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4062fbf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4062fcd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4062fdb0"/>
        <function-ref name="getLength" scoped="" ref="0x4062fe90"/>
        <function-ref name="setDestPan" scoped="" ref="0x4062e010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4062e0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4062e1d0"/>
        <function-ref name="getType" scoped="" ref="0x4062e3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4062e490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4062e570"/>
        <function-ref name="getFramePending" scoped="" ref="0x4062e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4062e7e8" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4062e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4062e9c0"/>
        <function-ref name="source" scoped="" ref="0x4062eaa0"/>
        <function-ref name="address" scoped="" ref="0x4062eb80"/>
        <function-ref name="destination" scoped="" ref="0x4062ec60"/>
        <function-ref name="setSource" scoped="" ref="0x4062ed40"/>
        <function-ref name="setDestination" scoped="" ref="0x4062ee20"/>
        <function-ref name="type" scoped="" ref="0x4062ef00"/>
        <function-ref name="setType" scoped="" ref="0x4062d010"/>
        <function-ref name="isForMe" scoped="" ref="0x4062d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4062d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4062d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4062d998" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4062d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4062db70"/>
        <function-ref name="getDSN" scoped="" ref="0x4062dc50"/>
        <function-ref name="setFCF" scoped="" ref="0x4062dd30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4062de10"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4062def0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4063e010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4063e0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x4063e1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4063e2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x4063e390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4063e470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4063e550"/>
        <function-ref name="setType" scoped="" ref="0x4063e630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4063e790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4063e870"/>
        <function-ref name="setLength" scoped="" ref="0x4063e950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4063ea30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4063eb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4063ebf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4063ecd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4063edb0"/>
        <function-ref name="getLength" scoped="" ref="0x4063ee90"/>
        <function-ref name="setDestPan" scoped="" ref="0x4063d010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4063d0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4063d1d0"/>
        <function-ref name="getType" scoped="" ref="0x4063d3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4063d490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4063d570"/>
        <function-ref name="getFramePending" scoped="" ref="0x4063d650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40639dc8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40639dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4063b010"/>
        <function-ref name="changed" scoped="" ref="0x4063b0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x4063b1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x4063b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4063d7e8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4063d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4063d9c0"/>
        <function-ref name="source" scoped="" ref="0x4063daa0"/>
        <function-ref name="address" scoped="" ref="0x4063db80"/>
        <function-ref name="destination" scoped="" ref="0x4063dc60"/>
        <function-ref name="setSource" scoped="" ref="0x4063dd40"/>
        <function-ref name="setDestination" scoped="" ref="0x4063de20"/>
        <function-ref name="type" scoped="" ref="0x4063df00"/>
        <function-ref name="setType" scoped="" ref="0x4063c010"/>
        <function-ref name="isForMe" scoped="" ref="0x4063c0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4063c1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4063c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40640740" loc="43:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40640740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40640918"/>
        <function-ref name="changed" scoped="" ref="0x406409f8"/>
        <function-ref name="amGroup" scoped="" ref="0x40640ad8"/>
        <function-ref name="setAddress" scoped="" ref="0x40640bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40630540" loc="28:/opt/tinyos-2.1.0/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40630540"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40630b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406883e0" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406883e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40688b30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4068b048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40688da8"/>
        <function-ref name="overflow" scoped="" ref="0x4068b2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4069f360" loc="60:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4069f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x4069f538"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4069f618"/>
        <function-ref name="getControlA" scoped="" ref="0x4069f6f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4069f7d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4069f8b8"/>
        <function-ref name="setControlB" scoped="" ref="0x4069f998"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4069fa78"/>
        <function-ref name="getControlB" scoped="" ref="0x4069fb58"/>
        <function-ref name="setControlC" scoped="" ref="0x4069fc38"/>
        <function-ref name="setControlA" scoped="" ref="0x4069fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40691190" loc="61:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40691190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4069ec68"/>
        <function-ref name="test" scoped="" ref="0x4069e778"/>
        <function-ref name="get" scoped="" ref="0x406917d8"/>
        <function-ref name="captured" scoped="" ref="0x40691cf0"/>
        <function-ref name="reset" scoped="" ref="0x4069e010"/>
        <function-ref name="isOn" scoped="" ref="0x4069e9f0"/>
        <function-ref name="set" scoped="" ref="0x40691a50"/>
        <function-ref name="start" scoped="" ref="0x4069e288"/>
        <function-ref name="stop" scoped="" ref="0x4069e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406aacb8" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406aacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406ad288"/>
        <function-ref name="fired" scoped="" ref="0x406ae830"/>
        <function-ref name="get" scoped="" ref="0x406ae318"/>
        <function-ref name="reset" scoped="" ref="0x406aeaa8"/>
        <function-ref name="isOn" scoped="" ref="0x406ad500"/>
        <function-ref name="set" scoped="" ref="0x406ae590"/>
        <function-ref name="start" scoped="" ref="0x406aed20"/>
        <function-ref name="stop" scoped="" ref="0x406ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40694928" loc="59:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40694928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40693418"/>
        <function-ref name="test" scoped="" ref="0x4069af08"/>
        <function-ref name="get" scoped="" ref="0x4069a010"/>
        <function-ref name="setScale" scoped="" ref="0x40693690"/>
        <function-ref name="getScale" scoped="" ref="0x40693930"/>
        <function-ref name="reset" scoped="" ref="0x4069a7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4069a528"/>
        <function-ref name="isOn" scoped="" ref="0x406931a0"/>
        <function-ref name="set" scoped="" ref="0x4069a288"/>
        <function-ref name="start" scoped="" ref="0x4069aa18"/>
        <function-ref name="stop" scoped="" ref="0x4069ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ba530" loc="60:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ba530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x406ba708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406ba7e8"/>
        <function-ref name="getControlA" scoped="" ref="0x406ba8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ba9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406baa88"/>
        <function-ref name="setControlB" scoped="" ref="0x406bab68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406bac48"/>
        <function-ref name="getControlB" scoped="" ref="0x406bad28"/>
        <function-ref name="setControlC" scoped="" ref="0x406bae08"/>
        <function-ref name="setControlA" scoped="" ref="0x406baee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x406b6128" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x406b6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406b5690"/>
        <function-ref name="fired" scoped="" ref="0x406b6c88"/>
        <function-ref name="get" scoped="" ref="0x406b6770"/>
        <function-ref name="reset" scoped="" ref="0x406b6f00"/>
        <function-ref name="isOn" scoped="" ref="0x406b5908"/>
        <function-ref name="set" scoped="" ref="0x406b69e8"/>
        <function-ref name="start" scoped="" ref="0x406b51a0"/>
        <function-ref name="stop" scoped="" ref="0x406b5418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406b8258" loc="61:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406b8258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406b7cc0"/>
        <function-ref name="test" scoped="" ref="0x406b77d0"/>
        <function-ref name="get" scoped="" ref="0x406b88a0"/>
        <function-ref name="captured" scoped="" ref="0x406b8db8"/>
        <function-ref name="reset" scoped="" ref="0x406b7068"/>
        <function-ref name="isOn" scoped="" ref="0x406b7a48"/>
        <function-ref name="set" scoped="" ref="0x406b8b18"/>
        <function-ref name="start" scoped="" ref="0x406b72e0"/>
        <function-ref name="stop" scoped="" ref="0x406b7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406b5d20" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406b5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406b22c0"/>
        <function-ref name="fired" scoped="" ref="0x406b38a8"/>
        <function-ref name="get" scoped="" ref="0x406b3390"/>
        <function-ref name="reset" scoped="" ref="0x406b3b20"/>
        <function-ref name="isOn" scoped="" ref="0x406b2538"/>
        <function-ref name="set" scoped="" ref="0x406b3608"/>
        <function-ref name="start" scoped="" ref="0x406b3d98"/>
        <function-ref name="stop" scoped="" ref="0x406b2048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406b2950" loc="64:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406b2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406b1f08"/>
        <function-ref name="fired" scoped="" ref="0x406b1528"/>
        <function-ref name="get" scoped="" ref="0x406b1010"/>
        <function-ref name="reset" scoped="" ref="0x406b17a0"/>
        <function-ref name="isOn" scoped="" ref="0x406c51a0"/>
        <function-ref name="set" scoped="" ref="0x406b1288"/>
        <function-ref name="start" scoped="" ref="0x406b1a18"/>
        <function-ref name="stop" scoped="" ref="0x406b1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406a6230" loc="59:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406a5ca0"/>
        <function-ref name="test" scoped="" ref="0x406a57b0"/>
        <function-ref name="get" scoped="" ref="0x406a6878"/>
        <function-ref name="setScale" scoped="" ref="0x406a5f18"/>
        <function-ref name="getScale" scoped="" ref="0x406ba1d0"/>
        <function-ref name="reset" scoped="" ref="0x406a5048"/>
        <function-ref name="overflow" scoped="" ref="0x406a6d90"/>
        <function-ref name="isOn" scoped="" ref="0x406a5a28"/>
        <function-ref name="set" scoped="" ref="0x406a6af0"/>
        <function-ref name="start" scoped="" ref="0x406a52c0"/>
        <function-ref name="stop" scoped="" ref="0x406a5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40707c70" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40707c70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4858"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4858"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40707e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40706078" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40706078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406feab8"/>
        <function-ref name="test" scoped="" ref="0x406fe5c8"/>
        <function-ref name="get" scoped="" ref="0x407066c0"/>
        <function-ref name="setScale" scoped="" ref="0x406fed30"/>
        <function-ref name="getScale" scoped="" ref="0x406fd010"/>
        <function-ref name="reset" scoped="" ref="0x40706e50"/>
        <function-ref name="overflow" scoped="" ref="0x40706bd8"/>
        <function-ref name="isOn" scoped="" ref="0x406fe840"/>
        <function-ref name="set" scoped="" ref="0x40706938"/>
        <function-ref name="start" scoped="" ref="0x406fe0d8"/>
        <function-ref name="stop" scoped="" ref="0x406fe350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406f2890" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406f2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40708010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40708500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40708288"/>
        <function-ref name="overflow" scoped="" ref="0x40708778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40708a58" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40708a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4071c500"/>
        <function-ref name="test" scoped="" ref="0x4071c010"/>
        <function-ref name="get" scoped="" ref="0x4071d0b8"/>
        <function-ref name="setScale" scoped="" ref="0x4071c778"/>
        <function-ref name="getScale" scoped="" ref="0x4071ca18"/>
        <function-ref name="reset" scoped="" ref="0x4071d848"/>
        <function-ref name="overflow" scoped="" ref="0x4071d5d0"/>
        <function-ref name="isOn" scoped="" ref="0x4071c288"/>
        <function-ref name="set" scoped="" ref="0x4071d330"/>
        <function-ref name="start" scoped="" ref="0x4071dac0"/>
        <function-ref name="stop" scoped="" ref="0x4071dd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40719b40" loc="52:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40719b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4071f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071f580"/>
        <function-ref name="overflow" scoped="" ref="0x4071fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4068c908" loc="51:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4068c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40719068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40719558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407192e0"/>
        <function-ref name="overflow" scoped="" ref="0x407197d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40733940" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40733940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40732010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40732360" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40732360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40732ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4072d010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40732d28"/>
        <function-ref name="overflow" scoped="" ref="0x4072d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4072b040" loc="20:/opt/tinyos-2.1.0/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4072b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4072b688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407406e0" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407406e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4073d248"/>
        <function-ref name="fired" scoped="" ref="0x4073e4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4073ebf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4073e998"/>
        <function-ref name="getdt" scoped="" ref="0x4073d6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4073d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4073e740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40740d08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4073ef10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4073e010"/>
        <function-ref name="stop" scoped="" ref="0x4073e290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4073da58" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4073da58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4073c0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4072bf18" loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4072bf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40740108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x4074a5b8" loc="29:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x4074a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074ad08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40749288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40749010"/>
        <function-ref name="overflow" scoped="" ref="0x40749500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40738240" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40738240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40738418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4074b978" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4074b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40737e40"/>
        <function-ref name="fired" scoped="" ref="0x40737610"/>
        <function-ref name="startAt" scoped="" ref="0x40737b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40737888"/>
        <function-ref name="getAlarm" scoped="" ref="0x4074a0d8"/>
        <function-ref name="start" scoped="" ref="0x407370f8"/>
        <function-ref name="stop" scoped="" ref="0x40737398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407d2ca8" loc="50:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407d2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407cf170"/>
        <function-ref name="fired" scoped="" ref="0x407d0928"/>
        <function-ref name="startAt" scoped="" ref="0x407d0e18"/>
        <function-ref name="isRunning" scoped="" ref="0x407d0ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x407cf3e8"/>
        <function-ref name="start" scoped="" ref="0x407d0410"/>
        <function-ref name="stop" scoped="" ref="0x407d06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d2870" loc="49:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d2870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4858"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4858"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407cf718" loc="51:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407cf718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407cfe68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ce388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ce110"/>
        <function-ref name="overflow" scoped="" ref="0x407ce600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40d202e8" loc="55:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d202e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d204c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d205a0"/>
        <function-ref name="getControlA" scoped="" ref="0x40d20680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d20760"/>
        <function-ref name="setControlB" scoped="" ref="0x40d20840"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d20920"/>
        <function-ref name="getControlB" scoped="" ref="0x40d20a00"/>
        <function-ref name="setControlA" scoped="" ref="0x40d20ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d274b8" loc="50:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d274b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d26980"/>
        <function-ref name="fired" scoped="" ref="0x40d26150"/>
        <function-ref name="startAt" scoped="" ref="0x40d26640"/>
        <function-ref name="isRunning" scoped="" ref="0x40d263c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d26bf8"/>
        <function-ref name="start" scoped="" ref="0x40d27c08"/>
        <function-ref name="stop" scoped="" ref="0x40d27ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d27080" loc="49:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d27080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d27258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d26f28" loc="51:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d26f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d24688"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d24b78"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d24900"/>
        <function-ref name="overflow" scoped="" ref="0x40d24df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40d1e730" loc="57:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40d1e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40d1e908"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40d1e9e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x40d1eac8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40d1eba8"/>
        <function-ref name="countBusy" scoped="" ref="0x40d1ec88"/>
        <function-ref name="compareABusy" scoped="" ref="0x40d1ed68"/>
        <function-ref name="getAssr" scoped="" ref="0x40d1ee48"/>
        <function-ref name="setAssr" scoped="" ref="0x40d1ef28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40d20cd0" loc="56:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40d20cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d1e288"/>
        <function-ref name="fired" scoped="" ref="0x40d1f848"/>
        <function-ref name="get" scoped="" ref="0x40d1f330"/>
        <function-ref name="reset" scoped="" ref="0x40d1fac0"/>
        <function-ref name="isOn" scoped="" ref="0x40d1e500"/>
        <function-ref name="set" scoped="" ref="0x40d1f5a8"/>
        <function-ref name="start" scoped="" ref="0x40d1fd38"/>
        <function-ref name="stop" scoped="" ref="0x40d1e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d23120" loc="54:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d23120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d22b80"/>
        <function-ref name="test" scoped="" ref="0x40d22690"/>
        <function-ref name="get" scoped="" ref="0x40d23768"/>
        <function-ref name="setScale" scoped="" ref="0x40d22df8"/>
        <function-ref name="getScale" scoped="" ref="0x40d200b8"/>
        <function-ref name="reset" scoped="" ref="0x40d23ef8"/>
        <function-ref name="overflow" scoped="" ref="0x40d23c80"/>
        <function-ref name="isOn" scoped="" ref="0x40d22908"/>
        <function-ref name="set" scoped="" ref="0x40d239e0"/>
        <function-ref name="start" scoped="" ref="0x40d221a0"/>
        <function-ref name="stop" scoped="" ref="0x40d22418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40793b68" loc="71:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40793b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40793d40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40793e20"/>
        <function-ref name="getControlA" scoped="" ref="0x40793f00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40791010"/>
        <function-ref name="setControlB" scoped="" ref="0x407910f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407911d0"/>
        <function-ref name="getControlB" scoped="" ref="0x407912b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40791390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4078f280" loc="73:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4078f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4078f458"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4078f538"/>
        <function-ref name="controlABusy" scoped="" ref="0x4078f618"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4078f6f8"/>
        <function-ref name="countBusy" scoped="" ref="0x4078f7d8"/>
        <function-ref name="compareABusy" scoped="" ref="0x4078f8b8"/>
        <function-ref name="getAssr" scoped="" ref="0x4078f998"/>
        <function-ref name="setAssr" scoped="" ref="0x4078fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407916b8" loc="72:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407916b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40790c90"/>
        <function-ref name="fired" scoped="" ref="0x407902b0"/>
        <function-ref name="get" scoped="" ref="0x40791d00"/>
        <function-ref name="reset" scoped="" ref="0x40790528"/>
        <function-ref name="isOn" scoped="" ref="0x40790f08"/>
        <function-ref name="set" scoped="" ref="0x40790010"/>
        <function-ref name="start" scoped="" ref="0x407907a0"/>
        <function-ref name="stop" scoped="" ref="0x40790a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4077f890" loc="70:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4077f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40793300"/>
        <function-ref name="test" scoped="" ref="0x40794df0"/>
        <function-ref name="get" scoped="" ref="0x4077fed8"/>
        <function-ref name="setScale" scoped="" ref="0x40793578"/>
        <function-ref name="getScale" scoped="" ref="0x40793818"/>
        <function-ref name="reset" scoped="" ref="0x40794688"/>
        <function-ref name="overflow" scoped="" ref="0x40794410"/>
        <function-ref name="isOn" scoped="" ref="0x40793088"/>
        <function-ref name="set" scoped="" ref="0x40794170"/>
        <function-ref name="start" scoped="" ref="0x40794900"/>
        <function-ref name="stop" scoped="" ref="0x40794b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40789af0" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40789af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40789cc8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40789da8"/>
        <function-ref name="getControlA" scoped="" ref="0x40789e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407a0010"/>
        <function-ref name="setControlB" scoped="" ref="0x407a00f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407a01d0"/>
        <function-ref name="getControlB" scoped="" ref="0x407a02b0"/>
        <function-ref name="setControlA" scoped="" ref="0x407a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4079d1e0" loc="65:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4079d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4079d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4079d640" loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4079d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4079d818"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4079d8f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x4079d9d8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4079dab8"/>
        <function-ref name="countBusy" scoped="" ref="0x4079db98"/>
        <function-ref name="compareABusy" scoped="" ref="0x4079dc78"/>
        <function-ref name="getAssr" scoped="" ref="0x4079dd58"/>
        <function-ref name="setAssr" scoped="" ref="0x4079de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407a06b8" loc="64:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407a06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4079fc90"/>
        <function-ref name="fired" scoped="" ref="0x4079f2b0"/>
        <function-ref name="get" scoped="" ref="0x407a0d00"/>
        <function-ref name="reset" scoped="" ref="0x4079f528"/>
        <function-ref name="isOn" scoped="" ref="0x4079ff08"/>
        <function-ref name="set" scoped="" ref="0x4079f010"/>
        <function-ref name="start" scoped="" ref="0x4079f7a0"/>
        <function-ref name="stop" scoped="" ref="0x4079fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4078c780" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40789288"/>
        <function-ref name="test" scoped="" ref="0x4078bce8"/>
        <function-ref name="get" scoped="" ref="0x4078cdc8"/>
        <function-ref name="setScale" scoped="" ref="0x40789500"/>
        <function-ref name="getScale" scoped="" ref="0x407897a0"/>
        <function-ref name="reset" scoped="" ref="0x4078b580"/>
        <function-ref name="overflow" scoped="" ref="0x4078b308"/>
        <function-ref name="isOn" scoped="" ref="0x40789010"/>
        <function-ref name="set" scoped="" ref="0x4078b068"/>
        <function-ref name="start" scoped="" ref="0x4078b7f8"/>
        <function-ref name="stop" scoped="" ref="0x4078ba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x407e79a8" loc="63:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x407e79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407e7b80"/>
        <function-ref name="runTask" scoped="" ref="0x407e7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x407e8010" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e74e0"/>
        <function-ref name="fired" scoped="" ref="0x407e8c78"/>
        <function-ref name="startAt" scoped="" ref="0x407e71a0"/>
        <function-ref name="isRunning" scoped="" ref="0x407e8ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x407e7758"/>
        <function-ref name="start" scoped="" ref="0x407e8760"/>
        <function-ref name="stop" scoped="" ref="0x407e8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40739c60" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40739c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e9790"/>
        <function-ref name="fired" scoped="" ref="0x407cca20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407e9150"/>
        <function-ref name="isOneShot" scoped="" ref="0x407cced0"/>
        <function-ref name="getdt" scoped="" ref="0x407e9c40"/>
        <function-ref name="gett0" scoped="" ref="0x407e99e8"/>
        <function-ref name="isRunning" scoped="" ref="0x407ccc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407cc2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407e9470"/>
        <function-ref name="startOneShot" scoped="" ref="0x407cc548"/>
        <function-ref name="stop" scoped="" ref="0x407cc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40821050" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40821050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40821228"/>
        <function-ref name="runTask" scoped="" ref="0x40821308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4080be30" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4080be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40808920"/>
        <function-ref name="fired" scoped="" ref="0x4080abc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408082e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40808088"/>
        <function-ref name="getdt" scoped="" ref="0x40808dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40808b78"/>
        <function-ref name="isRunning" scoped="" ref="0x4080ae18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4080a468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40808600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4080a6e8"/>
        <function-ref name="stop" scoped="" ref="0x4080a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e3a60" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4080b670"/>
        <function-ref name="fired" scoped="" ref="0x4080d840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4080b010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4080dd10"/>
        <function-ref name="getdt" scoped="" ref="0x4080bb40"/>
        <function-ref name="gett0" scoped="" ref="0x4080b8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4080daa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4080d0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4080b340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4080d348"/>
        <function-ref name="stop" scoped="" ref="0x4080d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40820538" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40820538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40820b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40820ed0" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40820ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4081f680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4081fb70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4081f8f8"/>
        <function-ref name="overflow" scoped="" ref="0x4081fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4081aaf0" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4081aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081acc8"/>
        <function-ref name="wait" scoped="" ref="0x4081ada8"/>
        <function-ref name="cancel" scoped="" ref="0x4081ae88"/>
        <function-ref name="isFree" scoped="" ref="0x40817010"/>
        <function-ref name="getNow" scoped="" ref="0x408170f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408176e8" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408176e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4a58"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4a58"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40816ba0"/>
        <function-ref name="fired" scoped="" ref="0x40816370"/>
        <function-ref name="startAt" scoped="" ref="0x40816860"/>
        <function-ref name="isRunning" scoped="" ref="0x408165e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40816e18"/>
        <function-ref name="start" scoped="" ref="0x40817e38"/>
        <function-ref name="stop" scoped="" ref="0x408160f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4082f878" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4082f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082fa50"/>
        <function-ref name="wait" scoped="" ref="0x4082fb30"/>
        <function-ref name="cancel" scoped="" ref="0x4082fc10"/>
        <function-ref name="isFree" scoped="" ref="0x4082fcf0"/>
        <function-ref name="getNow" scoped="" ref="0x4082fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4082c170" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4082c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082b620"/>
        <function-ref name="fired" scoped="" ref="0x4082cdd8"/>
        <function-ref name="startAt" scoped="" ref="0x4082b2e0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082b068"/>
        <function-ref name="getAlarm" scoped="" ref="0x4082b898"/>
        <function-ref name="start" scoped="" ref="0x4082c8c0"/>
        <function-ref name="stop" scoped="" ref="0x4082cb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408263f0" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408265c8"/>
        <function-ref name="suspend" scoped="" ref="0x408266a8"/>
        <function-ref name="resume" scoped="" ref="0x40826788"/>
        <function-ref name="run" scoped="" ref="0x40826868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4082e808" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4082e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4082e9e0"/>
        <function-ref name="suspend" scoped="" ref="0x4082eac0"/>
        <function-ref name="resume" scoped="" ref="0x4082eba0"/>
        <function-ref name="run" scoped="" ref="0x4082ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40830798" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40830798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40830970"/>
        <function-ref name="getPayload" scoped="" ref="0x40830a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40830b30"/>
        <function-ref name="cancel" scoped="" ref="0x40830c10"/>
        <function-ref name="sendDone" scoped="" ref="0x40830cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40830f00" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40830f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40831320" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40831320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408314f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408315d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408316b8"/>
        <function-ref name="cancel" scoped="" ref="0x40831798"/>
        <function-ref name="sendDone" scoped="" ref="0x40831878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40830398" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40830398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40830570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4084a010" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4084a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x4084a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40831ce0" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40831ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40831eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4084b288" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4084b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4084b460"/>
        <function-ref name="source" scoped="" ref="0x4084b540"/>
        <function-ref name="address" scoped="" ref="0x4084b620"/>
        <function-ref name="destination" scoped="" ref="0x4084b700"/>
        <function-ref name="setSource" scoped="" ref="0x4084b7e0"/>
        <function-ref name="setDestination" scoped="" ref="0x4084b8c0"/>
        <function-ref name="type" scoped="" ref="0x4084b9a0"/>
        <function-ref name="setType" scoped="" ref="0x4084ba80"/>
        <function-ref name="isForMe" scoped="" ref="0x4084bb60"/>
        <function-ref name="setGroup" scoped="" ref="0x4084bc40"/>
        <function-ref name="localGroup" scoped="" ref="0x4084bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4083ade8" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4083ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40854010"/>
        <function-ref name="stopDone" scoped="" ref="0x408540f0"/>
        <function-ref name="start" scoped="" ref="0x408541d0"/>
        <function-ref name="stop" scoped="" ref="0x408542b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40853660" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40853660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40853838"/>
        <function-ref name="getPayload" scoped="" ref="0x40853918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408539f8"/>
        <function-ref name="cancel" scoped="" ref="0x40853ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x40853bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40853dc8" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40853dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40852010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40854420" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40854420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408545f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408546d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408547b8"/>
        <function-ref name="cancel" scoped="" ref="0x40854898"/>
        <function-ref name="sendDone" scoped="" ref="0x40854978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40853010" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40853010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408531e8"/>
        <function-ref name="stopDone" scoped="" ref="0x408532c8"/>
        <function-ref name="start" scoped="" ref="0x408533a8"/>
        <function-ref name="stop" scoped="" ref="0x40853488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40854b00" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40854b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40854cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4084f970" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4084f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4084fb48"/>
        <function-ref name="getPayload" scoped="" ref="0x4084fc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4084fd08"/>
        <function-ref name="cancel" scoped="" ref="0x4084fde8"/>
        <function-ref name="sendDone" scoped="" ref="0x4084fec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4084d130" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4084d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084d308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40852718" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40852718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408528f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408529d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40852ab0"/>
        <function-ref name="cancel" scoped="" ref="0x40852b90"/>
        <function-ref name="sendDone" scoped="" ref="0x40852c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x4084f570" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x4084f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084f748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x4084d4d0" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4084d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4084d6a8"/>
        <function-ref name="getDSN" scoped="" ref="0x4084d788"/>
        <function-ref name="setFCF" scoped="" ref="0x4084d868"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4084d948"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4084da28"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4084db08"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4084dbe8"/>
        <function-ref name="setDSN" scoped="" ref="0x4084dcc8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4084dda8"/>
        <function-ref name="getHeader" scoped="" ref="0x4084de88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4084c010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4084c0f0"/>
        <function-ref name="setType" scoped="" ref="0x4084c1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4084c330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4084c410"/>
        <function-ref name="setLength" scoped="" ref="0x4084c4f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4084c5d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4084c6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4084c790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4084c870"/>
        <function-ref name="setFramePending" scoped="" ref="0x4084c950"/>
        <function-ref name="getLength" scoped="" ref="0x4084ca30"/>
        <function-ref name="setDestPan" scoped="" ref="0x4084cb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4084cbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x4084ccd0"/>
        <function-ref name="getType" scoped="" ref="0x4084ceb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40867010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408670f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408671d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40852df8" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40852df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4085b260" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4085b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4085b438"/>
        <function-ref name="stopDone" scoped="" ref="0x4085b518"/>
        <function-ref name="start" scoped="" ref="0x4085b5f8"/>
        <function-ref name="stop" scoped="" ref="0x4085b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40876cc0" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40876cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40876e98"/>
        <function-ref name="request" scoped="" ref="0x40891010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40891b90" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40891b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40891d68"/>
        <function-ref name="ready" scoped="" ref="0x40891e48"/>
        <function-ref name="sendDone" scoped="" ref="0x40891f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40890f20" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40890f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088f110"/>
        <function-ref name="getPayload" scoped="" ref="0x4088f1f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4088f2d0"/>
        <function-ref name="cancel" scoped="" ref="0x4088f3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4088f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4088f5f0" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4088f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4088f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40877cf8" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40877cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40877ed0"/>
        <function-ref name="turnOn" scoped="" ref="0x40876010"/>
        <function-ref name="setChannel" scoped="" ref="0x408760f0"/>
        <function-ref name="done" scoped="" ref="0x408761d0"/>
        <function-ref name="standby" scoped="" ref="0x408762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4085b818" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4085b818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4085b9f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4085bad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085bbb0"/>
        <function-ref name="cancel" scoped="" ref="0x4085bc90"/>
        <function-ref name="sendDone" scoped="" ref="0x4085bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40877200" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40877200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408773d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408774b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40877598"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40877678"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40877758"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40877838"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40877918"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408779f8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40877ad8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40877bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40891170" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40891170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40891348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408768c8" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408768c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40876aa0"/>
        <function-ref name="header" scoped="" ref="0x40876b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408914d8" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408914d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408916b0"/>
        <function-ref name="turnOn" scoped="" ref="0x40891790"/>
        <function-ref name="setChannel" scoped="" ref="0x40891870"/>
        <function-ref name="done" scoped="" ref="0x40891950"/>
        <function-ref name="standby" scoped="" ref="0x40891a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40890948" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40890948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40890b20"/>
        <function-ref name="stopDone" scoped="" ref="0x40890c00"/>
        <function-ref name="start" scoped="" ref="0x40890ce0"/>
        <function-ref name="stop" scoped="" ref="0x40890dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4088f928" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4088f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4088fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4085beb0" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4085beb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408770c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40890098" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40890098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40890270"/>
        <function-ref name="header" scoped="" ref="0x40890350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408763f0" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408765c8"/>
        <function-ref name="ready" scoped="" ref="0x408766a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40876788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408904b0" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408904b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40890708"/>
        <function-ref name="request" scoped="" ref="0x408907e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40868918" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40868918"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40868af0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40868bd0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40868cb0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40868d90"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40868e70"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40881010"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408810f0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408811d0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408812b0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40881390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4088d578" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4088d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4088d750"/>
        <function-ref name="stopDone" scoped="" ref="0x4088d830"/>
        <function-ref name="start" scoped="" ref="0x4088d910"/>
        <function-ref name="stop" scoped="" ref="0x4088d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4088a648" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4088a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4088a820"/>
        <function-ref name="turnOn" scoped="" ref="0x4088a900"/>
        <function-ref name="setChannel" scoped="" ref="0x4088a9e0"/>
        <function-ref name="done" scoped="" ref="0x4088aac0"/>
        <function-ref name="standby" scoped="" ref="0x4088aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4088db60" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4088db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088dd38"/>
        <function-ref name="getPayload" scoped="" ref="0x4088de18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4088def8"/>
        <function-ref name="cancel" scoped="" ref="0x4088a010"/>
        <function-ref name="sendDone" scoped="" ref="0x4088a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408896e8" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408896e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408898c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408899a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40889a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40889b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40889c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408892b0" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40889488"/>
        <function-ref name="header" scoped="" ref="0x40889568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4088a278" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4088a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4088a450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4088ad40" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4088ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088af18"/>
        <function-ref name="ready" scoped="" ref="0x40889010"/>
        <function-ref name="sendDone" scoped="" ref="0x408890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408873d8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408873d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408875b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40887690"/>
        <function-ref name="start" scoped="" ref="0x40887770"/>
        <function-ref name="stop" scoped="" ref="0x40887850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40887a60" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40887a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40887c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408848e8" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408848e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40884ac0"/>
        <function-ref name="turnOn" scoped="" ref="0x40884ba0"/>
        <function-ref name="setChannel" scoped="" ref="0x40884c80"/>
        <function-ref name="done" scoped="" ref="0x40884d60"/>
        <function-ref name="standby" scoped="" ref="0x40884e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40887da8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40887da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40884010"/>
        <function-ref name="getPayload" scoped="" ref="0x408840f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408841d0"/>
        <function-ref name="cancel" scoped="" ref="0x408842b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40884390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4089e010" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4089e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4089e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4089e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4089e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4089fb80" loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4089fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089fd58"/>
        <function-ref name="header" scoped="" ref="0x4089fe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40899f00" loc="101:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40899f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408980f0"/>
        <function-ref name="runTask" scoped="" ref="0x408981d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40884518" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40884518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408846f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40893570" loc="139:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40893570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40893748"/>
        <function-ref name="runTask" scoped="" ref="0x40893828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x408ba938" loc="267:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x408ba938"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408bab10"/>
        <function-ref name="runTask" scoped="" ref="0x408babf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4089f628" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089f800"/>
        <function-ref name="ready" scoped="" ref="0x4089f8e0"/>
        <function-ref name="sendDone" scoped="" ref="0x4089f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4089f010" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4089f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4089f1e8"/>
        <function-ref name="suspend" scoped="" ref="0x4089f2c8"/>
        <function-ref name="resume" scoped="" ref="0x4089f3a8"/>
        <function-ref name="run" scoped="" ref="0x4089f488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ca3c8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ca3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ca5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x408ca680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ca760"/>
        <function-ref name="cancel" scoped="" ref="0x408ca840"/>
        <function-ref name="sendDone" scoped="" ref="0x408ca920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408cab68" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408cab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cad40"/>
        <function-ref name="header" scoped="" ref="0x408cae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4088b7c0" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4088b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088b998"/>
        <function-ref name="getPayload" scoped="" ref="0x4088ba78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4088bb58"/>
        <function-ref name="cancel" scoped="" ref="0x4088bc38"/>
        <function-ref name="sendDone" scoped="" ref="0x4088bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408c9070" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408c9070"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408c9248"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408c9328"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408c9408"/>
        <function-ref name="getSender" scoped="" ref="0x408c94e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4088bed8" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4088bed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ca0c0"/>
        <function-ref name="header" scoped="" ref="0x408ca1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408c6ad8" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408c6ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c6cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x408c6d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c6e70"/>
        <function-ref name="cancel" scoped="" ref="0x408c5010"/>
        <function-ref name="sendDone" scoped="" ref="0x408c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408c5338" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408c5338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c5510"/>
        <function-ref name="header" scoped="" ref="0x408c55f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x408da498" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408da498"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408da670"/>
        <function-ref name="clearAll" scoped="" ref="0x408da750"/>
        <function-ref name="get" scoped="" ref="0x408da830"/>
        <function-ref name="set" scoped="" ref="0x408da910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408c9b68" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408c9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c9d40"/>
        <function-ref name="getPayload" scoped="" ref="0x408c9e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c9f00"/>
        <function-ref name="cancel" scoped="" ref="0x408c6010"/>
        <function-ref name="sendDone" scoped="" ref="0x408c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x408be450" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408be450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408be628"/>
        <function-ref name="insertNode" scoped="" ref="0x408be708"/>
        <function-ref name="getNode" scoped="" ref="0x408be7e8"/>
        <function-ref name="evicted" scoped="" ref="0x408be8c8"/>
        <function-ref name="getIndex" scoped="" ref="0x408be9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408c62b0" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408c62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c6488"/>
        <function-ref name="header" scoped="" ref="0x408c6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c66d8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c66d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c68b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x408c57b0" loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x408c57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408c5988"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408c5a68"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408c5b48"/>
        <function-ref name="getSender" scoped="" ref="0x408c5c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408c8960" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408c8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408c8b38"/>
        <function-ref name="insertNode" scoped="" ref="0x408c8c18"/>
        <function-ref name="getNode" scoped="" ref="0x408c8cf8"/>
        <function-ref name="evicted" scoped="" ref="0x408c8dd8"/>
        <function-ref name="getIndex" scoped="" ref="0x408c8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408e7328" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e7328"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e7500"/>
        <function-ref name="clearAll" scoped="" ref="0x408e75e0"/>
        <function-ref name="get" scoped="" ref="0x408e76c0"/>
        <function-ref name="set" scoped="" ref="0x408e77a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408cc8d0" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408cc8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408ccaa8"/>
        <function-ref name="insertNode" scoped="" ref="0x408ccb88"/>
        <function-ref name="getNode" scoped="" ref="0x408ccc68"/>
        <function-ref name="evicted" scoped="" ref="0x408ccd48"/>
        <function-ref name="getIndex" scoped="" ref="0x408cce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408cc538" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408cc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408cc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408cd520" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408cd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408cd6f8"/>
        <function-ref name="clearAll" scoped="" ref="0x408cd7d8"/>
        <function-ref name="get" scoped="" ref="0x408cd8b8"/>
        <function-ref name="set" scoped="" ref="0x408cd998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408eb010" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408eb1e8"/>
        <function-ref name="ready" scoped="" ref="0x408eb2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408eb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408eb5f0" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408eb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408eb7c8"/>
        <function-ref name="header" scoped="" ref="0x408eb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408ec7f0" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408ec7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ec9c8"/>
        <function-ref name="turnOn" scoped="" ref="0x408ecaa8"/>
        <function-ref name="setChannel" scoped="" ref="0x408ecb88"/>
        <function-ref name="done" scoped="" ref="0x408ecc68"/>
        <function-ref name="standby" scoped="" ref="0x408ecd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408ebac8" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408ebac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ebca0"/>
        <function-ref name="turnOn" scoped="" ref="0x408ebd80"/>
        <function-ref name="setChannel" scoped="" ref="0x408ebe60"/>
        <function-ref name="done" scoped="" ref="0x408ea010"/>
        <function-ref name="standby" scoped="" ref="0x408ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408ea360" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408ea360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x408eac38"/>
        <function-ref name="channelError" scoped="" ref="0x408ea618"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x408ea6f8"/>
        <function-ref name="getChannelTime" scoped="" ref="0x408ea7d8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x408ea8b8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x408ea998"/>
        <function-ref name="timerTick" scoped="" ref="0x408eaa78"/>
        <function-ref name="getSender" scoped="" ref="0x408eab58"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x408ea538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408ec390" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408ec390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ec568"/>
        <function-ref name="header" scoped="" ref="0x408ec648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408cbd58" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408cbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ec010"/>
        <function-ref name="ready" scoped="" ref="0x408ec0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40902128" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40902128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40902300"/>
        <function-ref name="ready" scoped="" ref="0x409023e0"/>
        <function-ref name="sendDone" scoped="" ref="0x409024c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x409035f0" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x409035f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x40903ec8"/>
        <function-ref name="channelError" scoped="" ref="0x409038a8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40903988"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40903a68"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40903b48"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40903c28"/>
        <function-ref name="timerTick" scoped="" ref="0x40903d08"/>
        <function-ref name="getSender" scoped="" ref="0x40903de8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x409037c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40902708" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40902708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409028e0"/>
        <function-ref name="header" scoped="" ref="0x409029c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40906d80" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40906d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40903010"/>
        <function-ref name="turnOn" scoped="" ref="0x409030f0"/>
        <function-ref name="setChannel" scoped="" ref="0x409031d0"/>
        <function-ref name="done" scoped="" ref="0x409032b0"/>
        <function-ref name="standby" scoped="" ref="0x40903390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40902be0" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40902be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40902db8"/>
        <function-ref name="turnOn" scoped="" ref="0x40902e98"/>
        <function-ref name="setChannel" scoped="" ref="0x40901010"/>
        <function-ref name="done" scoped="" ref="0x409010f0"/>
        <function-ref name="standby" scoped="" ref="0x409011d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x408ff750" loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408ff750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408ff928"/>
        <function-ref name="insertNode" scoped="" ref="0x408ffa08"/>
        <function-ref name="getNode" scoped="" ref="0x408ffae8"/>
        <function-ref name="evicted" scoped="" ref="0x408ffbc8"/>
        <function-ref name="getIndex" scoped="" ref="0x408ffca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40906920" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40906920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40906af8"/>
        <function-ref name="header" scoped="" ref="0x40906bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x408ffe90" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408ffe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408fe080"/>
        <function-ref name="clearAll" scoped="" ref="0x408fe160"/>
        <function-ref name="get" scoped="" ref="0x408fe240"/>
        <function-ref name="set" scoped="" ref="0x408fe320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408fe4a8" loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408fe4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408fe680"/>
        <function-ref name="suspend" scoped="" ref="0x408fe760"/>
        <function-ref name="resume" scoped="" ref="0x408fe840"/>
        <function-ref name="run" scoped="" ref="0x408fe920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409063c8" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409063c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409065a0"/>
        <function-ref name="ready" scoped="" ref="0x40906680"/>
        <function-ref name="sendDone" scoped="" ref="0x40906760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x40920820" loc="229:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x40920820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409209f8"/>
        <function-ref name="runTask" scoped="" ref="0x40920ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40901470" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40901470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408ff010"/>
        <function-ref name="fired" scoped="" ref="0x40900268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40900970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40900718"/>
        <function-ref name="getdt" scoped="" ref="0x408ff4c0"/>
        <function-ref name="gett0" scoped="" ref="0x408ff268"/>
        <function-ref name="isRunning" scoped="" ref="0x409004c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40901a98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40900c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40901d18"/>
        <function-ref name="stop" scoped="" ref="0x40900010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4091c6e8" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4091c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40934248"/>
        <function-ref name="fired" scoped="" ref="0x4091b4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4091bbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4091b998"/>
        <function-ref name="getdt" scoped="" ref="0x409346f8"/>
        <function-ref name="gett0" scoped="" ref="0x409344a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4091b740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4091cd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4091bf10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4091b010"/>
        <function-ref name="stop" scoped="" ref="0x4091b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409178e8" loc="38:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x409178e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409323f8"/>
        <function-ref name="fired" scoped="" ref="0x40933680"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40933d88"/>
        <function-ref name="isOneShot" scoped="" ref="0x40933b30"/>
        <function-ref name="getdt" scoped="" ref="0x409328a8"/>
        <function-ref name="gett0" scoped="" ref="0x40932650"/>
        <function-ref name="isRunning" scoped="" ref="0x409338d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40917f10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409320d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x409331a8"/>
        <function-ref name="stop" scoped="" ref="0x40933428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4092f620" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4092f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092f7f8"/>
        <function-ref name="clearAll" scoped="" ref="0x4092f8d8"/>
        <function-ref name="get" scoped="" ref="0x4092f9b8"/>
        <function-ref name="set" scoped="" ref="0x4092fa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40928a78" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40928a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40928c50"/>
        <function-ref name="ready" scoped="" ref="0x40928d30"/>
        <function-ref name="sendDone" scoped="" ref="0x40928e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40927098" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40927098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40927270"/>
        <function-ref name="header" scoped="" ref="0x40927350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409275c8" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409275c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x409277a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40927880"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40927960"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40927a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40928568" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40928568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40928740"/>
        <function-ref name="header" scoped="" ref="0x40928820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40928010" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40928010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409281e8"/>
        <function-ref name="ready" scoped="" ref="0x409282c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409283a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40944c60" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40944c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40944e38"/>
        <function-ref name="ready" scoped="" ref="0x40944f18"/>
        <function-ref name="sendDone" scoped="" ref="0x40943010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40943258" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40943258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40943430"/>
        <function-ref name="header" scoped="" ref="0x40943510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409436b8" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409436b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40943890"/>
        <function-ref name="wait" scoped="" ref="0x40943970"/>
        <function-ref name="cancel" scoped="" ref="0x40943a50"/>
        <function-ref name="isFree" scoped="" ref="0x40943b30"/>
        <function-ref name="getNow" scoped="" ref="0x40943c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40940a50" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40940a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40940c28"/>
        <function-ref name="rand32" scoped="" ref="0x40940d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40942010" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40942010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x409421e8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x409422c8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x409423a8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40942488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40944750" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40944750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40944928"/>
        <function-ref name="header" scoped="" ref="0x40944a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409441f8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409441f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409443d0"/>
        <function-ref name="ready" scoped="" ref="0x409444b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40944590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4093e010" loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4093e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4093e1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4093e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40949c40" loc="35:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40949c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40949e18"/>
        <function-ref name="rand32" scoped="" ref="0x40949ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40949380" loc="34:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40949380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409499a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4094c010" loc="33:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4094c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4094c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409476e0" loc="37:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409476e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409478b8"/>
        <function-ref name="rand32" scoped="" ref="0x40947998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4094bdd0" loc="36:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4094bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40947448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4094b8b0" loc="35:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4094b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4094ba88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095e8a0" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095ea78"/>
        <function-ref name="ready" scoped="" ref="0x4095eb58"/>
        <function-ref name="sendDone" scoped="" ref="0x4095ec38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4095ee80" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4095ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095d070"/>
        <function-ref name="header" scoped="" ref="0x4095d150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4095d3a0" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4095d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4095d578"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4095d658"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4095d738"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4095d818"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4095d8f8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4095d9d8"/>
        <function-ref name="setAckReceived" scoped="" ref="0x4095dab8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4095db98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4095e390" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4095e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095e568"/>
        <function-ref name="header" scoped="" ref="0x4095e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4092adf0" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4092adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095e010"/>
        <function-ref name="ready" scoped="" ref="0x4095e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4095e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095cd28" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095cf00"/>
        <function-ref name="ready" scoped="" ref="0x40959010"/>
        <function-ref name="sendDone" scoped="" ref="0x409590f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40959338" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40959338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40959510"/>
        <function-ref name="header" scoped="" ref="0x409595f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40959798" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40959798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40959970"/>
        <function-ref name="wait" scoped="" ref="0x40959a50"/>
        <function-ref name="cancel" scoped="" ref="0x40959b30"/>
        <function-ref name="isFree" scoped="" ref="0x40959c10"/>
        <function-ref name="getNow" scoped="" ref="0x40959cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4095c818" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4095c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095c9f0"/>
        <function-ref name="header" scoped="" ref="0x4095cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40959ee0" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40959ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409580e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409581c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409582a0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40958380"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40958460"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40958540"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40958620"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40958700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4095c2c0" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4095c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095c498"/>
        <function-ref name="ready" scoped="" ref="0x4095c578"/>
        <function-ref name="sendDone" scoped="" ref="0x4095c658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40929da8" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40929da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4095f010"/>
        <function-ref name="stopDone" scoped="" ref="0x4095f0f0"/>
        <function-ref name="start" scoped="" ref="0x4095f1d0"/>
        <function-ref name="stop" scoped="" ref="0x4095f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409678e0" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40967ab8"/>
        <function-ref name="request" scoped="" ref="0x40967b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40966748" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40966748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40966920"/>
        <function-ref name="ready" scoped="" ref="0x40966a00"/>
        <function-ref name="sendDone" scoped="" ref="0x40966ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40985b00" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40985b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40985cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40985db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40985e98"/>
        <function-ref name="cancel" scoped="" ref="0x40984010"/>
        <function-ref name="sendDone" scoped="" ref="0x409840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40984250" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40984250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40984428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40968930" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40968930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40968b08"/>
        <function-ref name="turnOn" scoped="" ref="0x40968be8"/>
        <function-ref name="setChannel" scoped="" ref="0x40968cc8"/>
        <function-ref name="done" scoped="" ref="0x40968da8"/>
        <function-ref name="standby" scoped="" ref="0x40968e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4095f3f0" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4095f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095f5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4095f6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095f788"/>
        <function-ref name="cancel" scoped="" ref="0x4095f868"/>
        <function-ref name="sendDone" scoped="" ref="0x4095f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4095fda0" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4095fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40968010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409680f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409681d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409682b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40968390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40968470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40968550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40968630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40968710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40967cf8" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40967cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40967ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409674e8" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409674e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409676c0"/>
        <function-ref name="header" scoped="" ref="0x409677a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40966090" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40966090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40966268"/>
        <function-ref name="turnOn" scoped="" ref="0x40966348"/>
        <function-ref name="setChannel" scoped="" ref="0x40966428"/>
        <function-ref name="done" scoped="" ref="0x40966508"/>
        <function-ref name="standby" scoped="" ref="0x409665e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40985528" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40985528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40985700"/>
        <function-ref name="stopDone" scoped="" ref="0x409857e0"/>
        <function-ref name="start" scoped="" ref="0x409858c0"/>
        <function-ref name="stop" scoped="" ref="0x409859a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40984588" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40984588"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40984760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4095fa88" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4095fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40966c40" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40966c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40966e18"/>
        <function-ref name="header" scoped="" ref="0x40966ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40967010" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40967010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409671e8"/>
        <function-ref name="ready" scoped="" ref="0x409672c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409673a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40985090" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40985090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409852e8"/>
        <function-ref name="request" scoped="" ref="0x409853c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4097e288" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4097e288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4097e460"/>
        <function-ref name="request" scoped="" ref="0x4097e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4097f128" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4097f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4097f300"/>
        <function-ref name="turnOn" scoped="" ref="0x4097f3e0"/>
        <function-ref name="setChannel" scoped="" ref="0x4097f4c0"/>
        <function-ref name="done" scoped="" ref="0x4097f5a0"/>
        <function-ref name="standby" scoped="" ref="0x4097f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4097fd78" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4097fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097e010"/>
        <function-ref name="header" scoped="" ref="0x4097e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4097f820" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4097f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097f9f8"/>
        <function-ref name="ready" scoped="" ref="0x4097fad8"/>
        <function-ref name="sendDone" scoped="" ref="0x4097fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x4097e720" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x4097e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x4097e8f8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x4097ee38"/>
        <function-ref name="getPayload" scoped="" ref="0x4097eab8"/>
        <function-ref name="setLength" scoped="" ref="0x4097eb98"/>
        <function-ref name="getLength" scoped="" ref="0x4097ec78"/>
        <function-ref name="getMaxLength" scoped="" ref="0x4097ed58"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4097e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409792c8" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409792c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409794a0"/>
        <function-ref name="request" scoped="" ref="0x40979580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4098a748" loc="56:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4098a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4098ae98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x40988a58" loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40988a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40986638"/>
        <function-ref name="get" scoped="" ref="0x40986378"/>
        <function-ref name="isSet" scoped="" ref="0x409860b8"/>
        <function-ref name="set" scoped="" ref="0x409868f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4097de68" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4097de68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4a58"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4a58"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409a32b0" loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409a3db0"/>
        <function-ref name="clear" scoped="" ref="0x409a2170"/>
        <function-ref name="isValid" scoped="" ref="0x409a3a00"/>
        <function-ref name="set" scoped="" ref="0x409a2520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x4098fb20" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x4098fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x4098fcf8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x4098fdd8"/>
        <function-ref name="spiWrite" scoped="" ref="0x4098feb8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40977010"/>
        <function-ref name="crcByte" scoped="" ref="0x409770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4097a1f8" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4097a1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4097a3d0"/>
        <function-ref name="turnOn" scoped="" ref="0x4097a4b0"/>
        <function-ref name="setChannel" scoped="" ref="0x4097a590"/>
        <function-ref name="done" scoped="" ref="0x4097a670"/>
        <function-ref name="standby" scoped="" ref="0x4097a750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40977cd8" loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40977cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40977eb0"/>
        <function-ref name="isInput" scoped="" ref="0x40995010"/>
        <function-ref name="toggle" scoped="" ref="0x409950f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409951d0"/>
        <function-ref name="get" scoped="" ref="0x409952b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40995390"/>
        <function-ref name="set" scoped="" ref="0x40995470"/>
        <function-ref name="clr" scoped="" ref="0x40995550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x4098b6d0" loc="59:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4098b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409882d0"/>
        <function-ref name="get" scoped="" ref="0x40988010"/>
        <function-ref name="isSet" scoped="" ref="0x4098bd18"/>
        <function-ref name="set" scoped="" ref="0x40988590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409a2a48" loc="64:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409a2a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a00a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x409923a0" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409923a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40992578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409772f0" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409774c8"/>
        <function-ref name="isInput" scoped="" ref="0x409775a8"/>
        <function-ref name="toggle" scoped="" ref="0x40977688"/>
        <function-ref name="isOutput" scoped="" ref="0x40977768"/>
        <function-ref name="get" scoped="" ref="0x40977848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40977928"/>
        <function-ref name="set" scoped="" ref="0x40977a08"/>
        <function-ref name="clr" scoped="" ref="0x40977ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4097ae48" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4097ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40979050"/>
        <function-ref name="header" scoped="" ref="0x40979130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4099f298" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4099f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099f470"/>
        <function-ref name="wait" scoped="" ref="0x4099f550"/>
        <function-ref name="cancel" scoped="" ref="0x4099f630"/>
        <function-ref name="isFree" scoped="" ref="0x4099f710"/>
        <function-ref name="getNow" scoped="" ref="0x4099f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40986e28" loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40986e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a5a08"/>
        <function-ref name="get" scoped="" ref="0x409a5748"/>
        <function-ref name="isSet" scoped="" ref="0x409a5488"/>
        <function-ref name="set" scoped="" ref="0x409a5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4097d808" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4097d808"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4a58"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4a58"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40993310" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40993310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409934e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409935c8"/>
        <function-ref name="request" scoped="" ref="0x409936a8"/>
        <function-ref name="granted" scoped="" ref="0x40993788"/>
        <function-ref name="isOwner" scoped="" ref="0x40993868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409797c0" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409797c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40979998"/>
        <function-ref name="isInput" scoped="" ref="0x40979a78"/>
        <function-ref name="toggle" scoped="" ref="0x40979b58"/>
        <function-ref name="isOutput" scoped="" ref="0x40979c38"/>
        <function-ref name="get" scoped="" ref="0x40979d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40979df8"/>
        <function-ref name="set" scoped="" ref="0x40979ed8"/>
        <function-ref name="clr" scoped="" ref="0x40978010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4097a8f0" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4097a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097aac8"/>
        <function-ref name="ready" scoped="" ref="0x4097aba8"/>
        <function-ref name="sendDone" scoped="" ref="0x4097ac88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x4098ce70" loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x4098ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x4098e0e0"/>
        <function-ref name="disable" scoped="" ref="0x4098e1c0"/>
        <function-ref name="captured" scoped="" ref="0x4098e2a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x4098e380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x4098d300" loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4098d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098dec8"/>
        <function-ref name="get" scoped="" ref="0x4098dc08"/>
        <function-ref name="isSet" scoped="" ref="0x4098d948"/>
        <function-ref name="set" scoped="" ref="0x4098b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409a0bc8" loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409a0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409a0da0"/>
        <function-ref name="suspend" scoped="" ref="0x409a0e80"/>
        <function-ref name="resume" scoped="" ref="0x4099f010"/>
        <function-ref name="run" scoped="" ref="0x4099f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409a0328" loc="66:/opt/tinyos-2.1.0/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409a0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409a0500"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409a0a40"/>
        <function-ref name="getPayload" scoped="" ref="0x409a06c0"/>
        <function-ref name="setLength" scoped="" ref="0x409a07a0"/>
        <function-ref name="getLength" scoped="" ref="0x409a0880"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409a0960"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409a05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x409f29f8" loc="35:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409f29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f2bd0"/>
        <function-ref name="isInput" scoped="" ref="0x409f2cb0"/>
        <function-ref name="toggle" scoped="" ref="0x409f2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x409f2e70"/>
        <function-ref name="get" scoped="" ref="0x409f1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f10f0"/>
        <function-ref name="set" scoped="" ref="0x409f11d0"/>
        <function-ref name="clr" scoped="" ref="0x409f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x409ee650" loc="40:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x409ee650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x409ee828"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x409ee908"/>
        <function-ref name="spiWrite" scoped="" ref="0x409ee9e8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409eeac8"/>
        <function-ref name="crcByte" scoped="" ref="0x409eeba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409f3bb8" loc="32:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409f3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409f3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x409f2010" loc="34:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f21e8"/>
        <function-ref name="isInput" scoped="" ref="0x409f22c8"/>
        <function-ref name="toggle" scoped="" ref="0x409f23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x409f2488"/>
        <function-ref name="get" scoped="" ref="0x409f2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f2648"/>
        <function-ref name="set" scoped="" ref="0x409f2728"/>
        <function-ref name="clr" scoped="" ref="0x409f2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409f1ca0" loc="38:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409f1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TRF230" ref="0x40563ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409ee170"/>
        <function-ref name="fired" scoped="" ref="0x409f0928"/>
        <function-ref name="startAt" scoped="" ref="0x409f0e18"/>
        <function-ref name="isRunning" scoped="" ref="0x409f0ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x409ee3e8"/>
        <function-ref name="start" scoped="" ref="0x409f0410"/>
        <function-ref name="stop" scoped="" ref="0x409f06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x409f34d8" loc="31:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409f34d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409f36b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409f3790"/>
        <function-ref name="request" scoped="" ref="0x409f3870"/>
        <function-ref name="granted" scoped="" ref="0x409f3950"/>
        <function-ref name="isOwner" scoped="" ref="0x409f3a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x4097ba60" loc="30:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x4097ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4097bc38"/>
        <function-ref name="isInput" scoped="" ref="0x4097bd18"/>
        <function-ref name="toggle" scoped="" ref="0x4097bdf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4097bed8"/>
        <function-ref name="get" scoped="" ref="0x409f3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f30f0"/>
        <function-ref name="set" scoped="" ref="0x409f31d0"/>
        <function-ref name="clr" scoped="" ref="0x409f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x409f14a0" loc="37:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409f14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409f1678"/>
        <function-ref name="disable" scoped="" ref="0x409f1758"/>
        <function-ref name="captured" scoped="" ref="0x409f1838"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409f1918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a18a88" loc="40:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a18a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a18c60"/>
        <function-ref name="isInput" scoped="" ref="0x40a18d40"/>
        <function-ref name="toggle" scoped="" ref="0x40a18e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40a18f00"/>
        <function-ref name="get" scoped="" ref="0x40a17010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a170f0"/>
        <function-ref name="set" scoped="" ref="0x40a171d0"/>
        <function-ref name="clr" scoped="" ref="0x40a172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a1b3a0" loc="34:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a1b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a1b578"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a1b658"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a1b738"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a1b818"/>
        <function-ref name="crcByte" scoped="" ref="0x40a1b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a1bc80" loc="39:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a1bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a18778"/>
        <function-ref name="test" scoped="" ref="0x40a18288"/>
        <function-ref name="get" scoped="" ref="0x40a192e8"/>
        <function-ref name="captured" scoped="" ref="0x40a19800"/>
        <function-ref name="reset" scoped="" ref="0x40a19aa0"/>
        <function-ref name="isOn" scoped="" ref="0x40a18500"/>
        <function-ref name="set" scoped="" ref="0x40a19560"/>
        <function-ref name="start" scoped="" ref="0x40a19d18"/>
        <function-ref name="stop" scoped="" ref="0x40a18010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a174b8" loc="41:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a174b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a17690"/>
        <function-ref name="isInput" scoped="" ref="0x40a17770"/>
        <function-ref name="toggle" scoped="" ref="0x40a17850"/>
        <function-ref name="isOutput" scoped="" ref="0x40a17930"/>
        <function-ref name="get" scoped="" ref="0x40a17a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a17af0"/>
        <function-ref name="set" scoped="" ref="0x40a17bd0"/>
        <function-ref name="clr" scoped="" ref="0x40a17cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a1b030" loc="32:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a1b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1b208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a1c990" loc="31:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a1c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a1cb68"/>
        <function-ref name="disable" scoped="" ref="0x40a1cc48"/>
        <function-ref name="captured" scoped="" ref="0x40a1cd28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a1ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a24a28" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a24a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a24c00"/>
        <function-ref name="sendDone" scoped="" ref="0x40a24ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a285e8" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a285e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a287c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a28268" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a28268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a28440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a27190" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a27190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a27368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a27448"/>
        <function-ref name="request" scoped="" ref="0x40a27528"/>
        <function-ref name="granted" scoped="" ref="0x40a27608"/>
        <function-ref name="isOwner" scoped="" ref="0x40a276e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a4a860" loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a4a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a4aa38"/>
        <function-ref name="runTask" scoped="" ref="0x40a4ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a209a0" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a209a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a20b78"/>
        <function-ref name="sendDone" scoped="" ref="0x40a20c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a1d010" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a1d1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a1d2c8"/>
        <function-ref name="request" scoped="" ref="0x40a1d3a8"/>
        <function-ref name="granted" scoped="" ref="0x40a1d488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a1d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a20628" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a20628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a20800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a202c8" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a202c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a204a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a36320" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a36320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a364f8"/>
        <function-ref name="sleep" scoped="" ref="0x40a1e950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a366b8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a1ea30"/>
        <function-ref name="initMaster" scoped="" ref="0x40a36878"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a36958"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a36a38"/>
        <function-ref name="read" scoped="" ref="0x40a36b18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a36bf8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a36cd8"/>
        <function-ref name="setClock" scoped="" ref="0x40a36db8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a36e98"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a1e010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a1e170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a1e250"/>
        <function-ref name="write" scoped="" ref="0x40a1e330"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a1e410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a1e4f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a1e5d0"/>
        <function-ref name="getClock" scoped="" ref="0x40a1e6b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a1e790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a365d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a36798"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a1e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a1f100" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a1f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a1f2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a1f3b8"/>
        <function-ref name="request" scoped="" ref="0x40a1f498"/>
        <function-ref name="granted" scoped="" ref="0x40a1f578"/>
        <function-ref name="isOwner" scoped="" ref="0x40a1f658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a33ac0" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a33ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a33c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a33640" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a33640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a33818"/>
        <function-ref name="userId" scoped="" ref="0x40a338f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a550c0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a55298"/>
        <function-ref name="sleep" scoped="" ref="0x40a54710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a55458"/>
        <function-ref name="dataReady" scoped="" ref="0x40a547f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a55618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a556f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a557d8"/>
        <function-ref name="read" scoped="" ref="0x40a558b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a55998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a55a78"/>
        <function-ref name="setClock" scoped="" ref="0x40a55b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a55c38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a55d18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a55e78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a54010"/>
        <function-ref name="write" scoped="" ref="0x40a540f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a541d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a542b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a54390"/>
        <function-ref name="getClock" scoped="" ref="0x40a54470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a54550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a55378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a55538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a54630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a70200" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a70200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a703d8"/>
        <function-ref name="isInput" scoped="" ref="0x40a704b8"/>
        <function-ref name="toggle" scoped="" ref="0x40a70598"/>
        <function-ref name="isOutput" scoped="" ref="0x40a70678"/>
        <function-ref name="get" scoped="" ref="0x40a70758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a70838"/>
        <function-ref name="set" scoped="" ref="0x40a70918"/>
        <function-ref name="clr" scoped="" ref="0x40a709f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a73d10" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a73d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a73ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40a72010"/>
        <function-ref name="toggle" scoped="" ref="0x40a720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a721d0"/>
        <function-ref name="get" scoped="" ref="0x40a722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a72390"/>
        <function-ref name="set" scoped="" ref="0x40a72470"/>
        <function-ref name="clr" scoped="" ref="0x40a72550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a73338" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a73338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a73510"/>
        <function-ref name="isInput" scoped="" ref="0x40a735f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a736d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a737b0"/>
        <function-ref name="get" scoped="" ref="0x40a73890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a73970"/>
        <function-ref name="set" scoped="" ref="0x40a73a50"/>
        <function-ref name="clr" scoped="" ref="0x40a73b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a71e30" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a71e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a73050"/>
        <function-ref name="stop" scoped="" ref="0x40a73130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a70c00" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a70c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a70dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a754a0" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a754a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a75678"/>
        <function-ref name="sleep" scoped="" ref="0x40a74b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a75838"/>
        <function-ref name="dataReady" scoped="" ref="0x40a74bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a759f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a75ad8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a75bb8"/>
        <function-ref name="read" scoped="" ref="0x40a75c98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a75d78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a75e58"/>
        <function-ref name="setClock" scoped="" ref="0x40a74010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a740f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a741d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a74330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a74410"/>
        <function-ref name="write" scoped="" ref="0x40a744f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a745d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a746b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a74790"/>
        <function-ref name="getClock" scoped="" ref="0x40a74870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a74950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a75758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a75918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a74a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a72740" loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a72918"/>
        <function-ref name="isInput" scoped="" ref="0x40a729f8"/>
        <function-ref name="toggle" scoped="" ref="0x40a72ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a72bb8"/>
        <function-ref name="get" scoped="" ref="0x40a72c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a72d78"/>
        <function-ref name="set" scoped="" ref="0x40a72e58"/>
        <function-ref name="clr" scoped="" ref="0x40a70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40aca030" loc="76:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40aca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40aca218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40aca2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40aca8e8" loc="79:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40aca8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40acaad0"/>
        <function-ref name="configure" scoped="" ref="0x40acabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a908c0" loc="75:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a908c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a90aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a90b88"/>
        <function-ref name="request" scoped="" ref="0x40a90c68"/>
        <function-ref name="granted" scoped="" ref="0x40a90d48"/>
        <function-ref name="isOwner" scoped="" ref="0x40a90e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40aca438" loc="77:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40aca610"/>
        <function-ref name="userId" scoped="" ref="0x40aca6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d94200" loc="34:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d94200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d943d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40d94538" loc="35:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40d94538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d94710"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d947f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d948d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40d949b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d93cb8" loc="52:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d93cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d93ea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d92010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d92610" loc="56:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d92610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d927f8"/>
        <function-ref name="configure" scoped="" ref="0x40d928d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40d92a38" loc="57:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40d92a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d92c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d92cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d92dd0"/>
        <function-ref name="dequeue" scoped="" ref="0x40d92eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d93578" loc="51:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d93578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d93760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d93840"/>
        <function-ref name="request" scoped="" ref="0x40d93920"/>
        <function-ref name="granted" scoped="" ref="0x40d93a00"/>
        <function-ref name="isOwner" scoped="" ref="0x40d93ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d92150" loc="53:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d92150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d92328"/>
        <function-ref name="userId" scoped="" ref="0x40d92408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40d91050" loc="69:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40d91050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d91228"/>
        <function-ref name="runTask" scoped="" ref="0x40d91308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ac5c88" loc="30:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ac5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aed150"/>
        <function-ref name="fired" scoped="" ref="0x40aee908"/>
        <function-ref name="startAt" scoped="" ref="0x40aeedf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40aeeb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40aed3c8"/>
        <function-ref name="start" scoped="" ref="0x40aee3f0"/>
        <function-ref name="stop" scoped="" ref="0x40aee690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d7d088" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d7d088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e4658"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e4658"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dab5c8"/>
        <function-ref name="fired" scoped="" ref="0x40d7dcf0"/>
        <function-ref name="startAt" scoped="" ref="0x40dab288"/>
        <function-ref name="isRunning" scoped="" ref="0x40dab010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40dab840"/>
        <function-ref name="start" scoped="" ref="0x40d7d7d8"/>
        <function-ref name="stop" scoped="" ref="0x40d7da78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40da9dd8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40da9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40da6388"/>
        <function-ref name="fired" scoped="" ref="0x40da8980"/>
        <function-ref name="get" scoped="" ref="0x40da8468"/>
        <function-ref name="reset" scoped="" ref="0x40da8bf8"/>
        <function-ref name="isOn" scoped="" ref="0x40da6600"/>
        <function-ref name="set" scoped="" ref="0x40da86e0"/>
        <function-ref name="start" scoped="" ref="0x40da8e70"/>
        <function-ref name="stop" scoped="" ref="0x40da6110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40dabb00" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40dabb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40da9600"/>
        <function-ref name="test" scoped="" ref="0x40da9110"/>
        <function-ref name="get" scoped="" ref="0x40daa200"/>
        <function-ref name="setScale" scoped="" ref="0x40da9878"/>
        <function-ref name="getScale" scoped="" ref="0x40da9b18"/>
        <function-ref name="reset" scoped="" ref="0x40daa990"/>
        <function-ref name="overflow" scoped="" ref="0x40daa718"/>
        <function-ref name="isOn" scoped="" ref="0x40da9388"/>
        <function-ref name="set" scoped="" ref="0x40daa478"/>
        <function-ref name="start" scoped="" ref="0x40daac08"/>
        <function-ref name="stop" scoped="" ref="0x40daae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40aebe40" loc="31:/opt/tinyos-2.1.0/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40aebe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403379d8"/>
            <typename><typedef-ref name="TMicro" ref="0x40337ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ae85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b17a70" loc="38:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b17a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b17c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b17d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40b17e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b17ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b16010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b17758" loc="37:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b17758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b17930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b16150" loc="39:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b16150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b16328"/>
        <function-ref name="source" scoped="" ref="0x40b16408"/>
        <function-ref name="address" scoped="" ref="0x40b164e8"/>
        <function-ref name="destination" scoped="" ref="0x40b165c8"/>
        <function-ref name="setSource" scoped="" ref="0x40b166a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40b16788"/>
        <function-ref name="type" scoped="" ref="0x40b16868"/>
        <function-ref name="setType" scoped="" ref="0x40b16948"/>
        <function-ref name="isForMe" scoped="" ref="0x40b16a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40b16b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40b16be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b11a30" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b11a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337158"/>
            <typename><typedef-ref name="TMilli" ref="0x40337320"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b0f528"/>
        <function-ref name="fired" scoped="" ref="0x40b107c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b10ec8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b10c70"/>
        <function-ref name="getdt" scoped="" ref="0x40b0f9d8"/>
        <function-ref name="gett0" scoped="" ref="0x40b0f780"/>
        <function-ref name="isRunning" scoped="" ref="0x40b10a18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b10068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b0f208"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b102e8"/>
        <function-ref name="stop" scoped="" ref="0x40b10568"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4038ba68" loc="51:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40386e10" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40395508" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403953b0" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40391b48" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4038e1c0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4038e068" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4038e888" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4038e730" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4038ede0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4039f308" loc="33:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4039f6f0" loc="34:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4039bb68" loc="31:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4039fec0" loc="36:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4039bf28" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4039fac8" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4039b428" loc="29:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4039b7b8" loc="30:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402e9638" loc="46:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ea010" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402e9a78" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402edf20" loc="56:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f2450" loc="64:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403627e0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403761a8" loc="54:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40321798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40359cb0" loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404c0af0" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404c0998" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404bf850" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404bf6f8" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404c02b0" loc="83:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404bf018" loc="109:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40483d68" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40483808" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40483a20" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40483c00" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404ada88" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ad728" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ad908" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404ad1c8" loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404a1b80" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a1a28" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404ac898" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ac540" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404ac738" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404c28d8" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c2780" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404bd2e0" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bd188" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404c8370" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c8010" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c81f0" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404bc9a8" loc="95:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404bc010" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bdc00" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404bdde0" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x404a4010" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
              <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a5a08" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404a5be8" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a5dc8" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404bb308" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404bb308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404b7a28" loc="125:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404ba8a8" loc="72:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404b8a00" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404b86b8" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404b88a0" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404b8210" loc="87:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404b63e8" loc="140:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404b7e70" loc="133:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404bad38" loc="81:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404bb960" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404bb808" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404b7408" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404b70c0" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404b72a8" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404ba010" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404bbea0" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ba4e0" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4048d5f0" loc="50:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4048da38" loc="56:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4048deb8" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4048b740" loc="72:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4048a458" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4048a900" loc="106:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4048b2f8" loc="66:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40489058" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4048aee8" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4048d1c8" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4048bbc0" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4048a010" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x404b19e8" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404b1890" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404a82f0" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404a8198" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404ab210" loc="57:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404ab8a8" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ab750" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404a7bd8" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404a7870" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404a7a78" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404a8ed8" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404a8b70" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404a8d78" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404b3310" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404b31b8" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404b3e48" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404b3b18" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404b3ce8" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404b27c0" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404b2668" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404af688" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404af328" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404af528" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404aff00" loc="184:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x404f28d8" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f2780" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x404ed3f0" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ed298" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x404ede78" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404edd20" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404f66f8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f63b8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404f6598" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40500208" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40501e90" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40500088" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40501930" loc="101:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404f5350" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f51f8" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40501010" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f5c90" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404f5e88" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40536af8" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40536af8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40536c60" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40536c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4054ce50" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40536c60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054ccf8" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4054b9c0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054b868" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4054c300" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054c1a8" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4054a4b8" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40536c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054a148" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4054a358" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40536c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x40544138" loc="58:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x4053f7b0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053f658" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x405409d0" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x40540878" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x40544da0" loc="81:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x405436e0" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40543318" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x40543580" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x40544748" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405445f0" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x40542cd0" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40542940" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x40542b70" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x405401e0" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40540088" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x40542188" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40542030" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x40537ae8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40537990" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4055e460" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4055e460"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4056b788" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056b630" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056b168" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4055e460"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056b010" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4055ead8" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055e980" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40569010" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4055e460"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056bbb8" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4056bdd0" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4055e460"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x4058b608" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x4057d530" loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x4057e2c8" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x4057e990" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057e838" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x4058bb78" loc="73:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x4057db40" loc="56:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x4058a010" loc="79:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4057d020" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057eeb0" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x4058b0c8" loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40579748" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40579d50" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40594380" loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40594228" loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x405947f0" loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405854c8" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40585370" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40585bc0" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40585a68" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x4057f950" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057f7f8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40587488" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4056d658" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056d500" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40584010" loc="74:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40575aa0" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40575728" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40575940" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405781c0" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578068" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40576168" loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576010" loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40576aa0" loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40576728" loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40576940" loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4056eab0" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x40578a60" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578720" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x40578900" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405751e0" loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40575088" loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40597ef0" loc="135:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597d98" loc="135:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40597168" loc="124:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597010" loc="124:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4058e028" loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058fcc0" loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4058feb0" loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4058d420" loc="79:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d2c8" loc="79:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x405a21c8" loc="172:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3e28" loc="172:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x405a2068" loc="172:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405a3370" loc="160:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3010" loc="160:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405a3210" loc="160:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4058ed30" loc="73:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ebd8" loc="73:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405978e0" loc="129:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405975a0" loc="129:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40597780" loc="129:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4059b3a8" loc="92:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4059b030" loc="92:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4059b248" loc="92:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405913d8" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404846e0"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x40493ad0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591260" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40595b80" loc="155:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40595a28" loc="155:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4058e690" loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058e538" loc="67:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405a1098" loc="184:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2d30" loc="184:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x405a2f20" loc="184:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4059a370" loc="103:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059a218" loc="103:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4059bcb0" loc="98:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4059b938" loc="98:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4059bb50" loc="98:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x4058f228" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591e98" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4058f0c8" loc="49:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x405a3980" loc="167:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3828" loc="167:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405a16a8" loc="190:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a1550" loc="190:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40595558" loc="150:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405951f8" loc="150:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405953f8" loc="150:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4058dad0" loc="85:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d978" loc="85:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40599b18" loc="119:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405997c8" loc="119:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405999b8" loc="119:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x40591a28" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405918d0" loc="44:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40596718" loc="140:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405963c8" loc="140:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405965b8" loc="140:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4059ab78" loc="109:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059a850" loc="109:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4059aa18" loc="109:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4058f808" loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058f6b0" loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x405a28e0" loc="179:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40497118"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2788" loc="179:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405a1db8" loc="196:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a1c60" loc="196:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40596d48" loc="145:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596bf0" loc="145:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405992e0" loc="114:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40599188" loc="114:/opt/tinyos-2.1.0/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405ad9c8" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405ad168" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405ad010" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405ad5b0" loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405a0a48" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405ade70" loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405811e8" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40583e68" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40581088" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40581680" loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40583350" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405831f8" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40583998" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40583840" loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40589bc0" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589a68" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405894e0" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589388" loc="29:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405880f8" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405887b0" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40588658" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x4057b4b0" loc="55:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4057a6a8" loc="72:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057a550" loc="72:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4057cec8" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057cd50" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x4057c880" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057c540" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4057c720" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x4057c058" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40571ed8" loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x4057baa8" loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x4057a010" loc="66:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405f7038" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405f7038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405f7518" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40639370" loc="50:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40639be0" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x406397e0" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4063ce50" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4063cae8" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40497370"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4063ccf0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4068ead0" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4068ead0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4068ec38" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068ec38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40689138" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068ec38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40689b60" loc="65:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40689660" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40688010" loc="71:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x406a3bc0" loc="61:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406a00f8" loc="67:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x406a3348" loc="59:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406a0b28" loc="71:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406a06b8" loc="68:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406a0560" loc="68:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x406a26e0" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a2588" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4069f168" loc="72:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4069f010" loc="72:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x406a3798" loc="60:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x406a2c58" loc="64:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a2b00" loc="64:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x406a2168" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a2010" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406922f0" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x4069ce18" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x4069ccc0" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4069c430" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406927e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4069d350" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4069d1f8" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4069d790" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4069c890" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40692d60" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40692c08" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406922f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4069db98" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069c010" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406af318" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406af318"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406aa240" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406ab1f0" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406af810" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406af318"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406ab5f8" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406aa6a0" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406afd98" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406af318"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406afc40" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406af318"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406aba00" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406abdf8" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406983e8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406983e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40695ba0" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40695310" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406988d8" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406983e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40694168" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40694010" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406945f8" loc="101:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406966c8" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406962a8" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40695778" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40698e50" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406983e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40698cf8" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406983e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40696ad0" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40696ec8" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40738bd0" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40738bd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40738d38" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4074b010" loc="98:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40735cd0" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4074c9b0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4074c660" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          </variable>
          <variable name="dt" ref="0x4074c850" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4074c158" loc="77:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4074b4a0" loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40735390" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40735238" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738d38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40735870" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407628a8" loc="69:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40764e00" loc="65:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4074f9e8" loc="59:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40762438" loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407622e0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40764990" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40764838" loc="62:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40762e70" loc="70:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40762d18" loc="70:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4074fe38" loc="60:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40764418" loc="61:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407642c0" loc="61:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x4075cb28" loc="81:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x4075d848" loc="57:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x4075dc70" loc="63:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x4075c168" loc="69:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4075b010" loc="87:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x4075c648" loc="75:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40761d60" loc="46:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347848"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347a70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4075d368" loc="52:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347848"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347a70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4075d210" loc="52:/opt/tinyos-2.1.0/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347848"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347a70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40828580" loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40828b50" loc="61:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x408261a8" loc="68:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40828158" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40873c10" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40873ab8" loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408735d8" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40874618" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408744c0" loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4086e2c8" loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40874d90" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40874c38" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40872010" loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40872a48" loc="45:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40871168" loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40871010" loc="52:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408715d8" loc="58:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40872550" loc="39:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4086d9b0" loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
              <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086d838" loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x4086d1c0" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086d068" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049b780"/>
                <typename><typedef-ref name="message_t" ref="0x404a5538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408bde60" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408bdd08" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x408da308" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408bd398" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408bd240" loc="35:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408bd8f8" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408bd7a0" loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x408c1cf8" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408c1ba0" loc="46:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x408c0a18" loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408c08c0" loc="60:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x408c0400" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408c02a8" loc="51:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x408be168" loc="69:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408be010" loc="69:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x408c1660" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408c1508" loc="38:/opt/tinyos-2.1.0/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404975d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40940850" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x409403a8" loc="35:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4094c758" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4094c758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4094cda8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4094c758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4094cc50" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4094c758"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4098eba0" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4098eba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4098ed08" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4098ed08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x4098a348" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4098ed08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4098a1f0" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4098ed08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x40990b88" loc="47:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x4098f2b8" loc="53:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4098f160" loc="53:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x4098f8b8" loc="59:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4098f760" loc="59:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x40990628" loc="41:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409904d0" loc="41:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x40990020" loc="33:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x40992cb8" loc="33:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40992ea8" loc="33:/opt/tinyos-2.1.0/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40992168" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40992010" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40994858" loc="110:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40978f20" loc="87:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40978920" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409943e8" loc="92:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40993010" loc="118:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x4098c2c8" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4098cc78" loc="55:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4098c830" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x4098c6d8" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40995d58" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a25788" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a25218" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a25430" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a25620" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a23dd0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a23650" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a23868" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a23a58" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b6d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a23c60" loc="72:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x40a3f348" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a3aa38" loc="109:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a3cb80" loc="100:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a39058" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a3aec8" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a1fed8" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a3bb30" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a3b9d8" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a3ed98" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a3ec40" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a3fbd8" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a36168" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a36010" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a3c210" loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a399e0" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a39888" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a372c8" loc="120:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a3a5f0" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a3a498" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a37b90" loc="124:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a3b168" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a3b010" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a3e188" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a3e030" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a3c760" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a3c608" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a3a010" loc="106:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a39480" loc="112:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a39df0" loc="115:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a37720" loc="122:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a3b5a0" loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a3f770" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a3e750" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a3e5f8" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a1dee8" loc="80:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a333f8" loc="88:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a71660" loc="74:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a71b48" loc="84:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a8b458" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a8ba30" loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a89750" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a89290" loc="49:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40aa6088" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eea00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a8ca18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40aa8ef8" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a8ca18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40aabcd0" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40aa83b8" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e59b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a8ca18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40aa8260" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a8ca18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40aa8968" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a8ca18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
